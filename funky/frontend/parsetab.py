
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MODULE_DEFINITIONARROW AS BACKTICK BOOL CHAR CLOSE_BRACE CLOSE_PAREN CLOSE_SQUARE COMMA DIVIDE ELSE ENDSTATEMENT EQUALITY EQUALS FLOAT GEQ GREATER IDENTIFIER IF IMPORT IN INEQUALITY INTEGER LAMBDA LEFTASSOC LEQ LESS LET LIST_CONSTRUCTOR MATCH MINUS MODULE NEWCONS NEWTYPE NONASSOC OF OPEN_BRACE OPEN_PAREN OPEN_SQUARE PIPE PLUS POW RIGHTASSOC SETFIX STRING THEN TIMES TYPENAME TYPESIG WHERE WHITESPACEMODULE_DEFINITION : MODULE IDENTIFIER WHERE BODY\n        BODY : OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE\n                | OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE\n        IMPORT_DECLARATIONS : IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION\n                               | IMPORT_DECLARATION\n        IMPORT_DECLARATION : IMPORT IDENTIFIER\n        TOP_DECLARATIONS : TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION\n                            | TOP_DECLARATION\n        TOP_DECLARATION : NEWTYPE TYPENAME EQUALS TYPE\n                           | NEWCONS TYPENAME EQUALS CONSTRUCTORS\n                           | DECLARATION\n        CONSTRUCTORS : CONSTRUCTORS PIPE CONSTRUCTOR\n                        | CONSTRUCTOR\n        CONSTRUCTOR : TYPENAME ATYPESDECLARATIONS : OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE\n                        | OPEN_BRACE CLOSE_BRACE\n        DECLARATIONS_LIST : DECLARATION ENDSTATEMENT DECLARATIONS_LIST\n                             | DECLARATION\n        DECLARATION : GEN_DECLARATION\n                       | FUNCTION_LHS RHS\n                       | PAT RHS\n        GEN_DECLARATION : IDENTIFIER TYPESIG TYPE\n                           | SETFIX ASSOCIATIVITY INTEGER OP\n                           |\n        ASSOCIATIVITY : LEFTASSOC\n                         | RIGHTASSOC\n                         | NONASSOC\n        TYPE : ATYPE\n                | ATYPE ARROW TYPE\n        ATYPES : ATYPES ATYPE\n                  |\n        ATYPE : TYPENAME\n                 | OPEN_PAREN TYPES_LIST CLOSE_PAREN\n                 | OPEN_PAREN TYPE CLOSE_PAREN\n                 | OPEN_SQUARE TYPE CLOSE_SQUARE\n        FUNCTION_LHS : IDENTIFIER APAT APATS\n                        | PAT VAROP PAT\n                        | OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS\n        RHS : EQUALS EXP\n               | EQUALS EXP WHERE DECLARATIONS\n               | GDRHS\n               | GDRHS WHERE DECLARATIONS\n        GDRHS : GUARDS EQUALS EXP\n                 | GUARDS EQUALS EXP GDRHS\n        GUARDS : PIPE GUARD\n        GUARD : INFIX_EXP\n        EXPS : EXPS EXP\n                | EXP\n        EXP : INFIX_EXP\n        INFIX_EXP : LEXP OP INFIX_EXP\n                     | MINUS INFIX_EXP\n                     | LEXP\n        LEXP : LAMBDA APAT APATS ARROW EXP\n                | LET DECLARATIONS IN EXP\n                | IF EXP THEN EXP ELSE EXP\n                | MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE\n                | FEXP\n        FEXP : FEXP AEXP\n                | AEXP\n        AEXP : USED_VAR\n                | GCON\n                | LITERAL\n                | OPEN_PAREN EXP CLOSE_PAREN\n                | OPEN_PAREN EXP COMMA EXP_LIST CLOSE_PAREN\n                | OPEN_SQUARE EXP CLOSE_SQUARE\n                | OPEN_SQUARE EXP COMMA EXP_LIST CLOSE_SQUARE\n                | GCON EXPS\n        ALTS : ALT ENDSTATEMENT ALTS\n                | ALT\n        ALT : PAT ARROW EXP\n               |\n        PAT : LPAT LIST_CONSTRUCTOR PAT\n               | LPAT\n        LPAT : APAT\n                | MINUS OPEN_PAREN INTEGER CLOSE_PAREN\n                | MINUS OPEN_PAREN FLOAT CLOSE_PAREN\n                | GCON APAT APATS\n        APAT : PARAM\n                | GCON\n                | LITERAL\n                | OPEN_PAREN PAT CLOSE_PAREN\n                | OPEN_PAREN PAT COMMA PAT_LIST CLOSE_PAREN\n                | OPEN_SQUARE PAT_LIST CLOSE_SQUARE\n        GCON : OPEN_PAREN CLOSE_PAREN\n                | OPEN_SQUARE CLOSE_SQUARE\n                | TYPENAME\n        VAROP : VARSYM\n                 | BACKTICK IDENTIFIER BACKTICK\n        OP : VAROP\n        EXP_LIST : EXP_LIST COMMA EXP\n                    | EXP\n        APATS : APAT APATS\n                 |\n        PAT_LIST : PAT_LIST COMMA PAT\n                    | PAT\n        VARSYM : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | POW\n                  | EQUALITY\n                  | INEQUALITY\n                  | LESS\n                  | LEQ\n                  | GREATER\n                  | GEQ\n                  | LIST_CONSTRUCTOR\n        TYPES_LIST : TYPES_LIST COMMA TYPE\n                      | TYPE\n        LITERAL : FLOAT\n                   | INTEGER\n                   | BOOL\n                   | CHAR\n                   | STRING\n        USED_VAR : IDENTIFIERPARAM : IDENTIFIER'
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MODULE_DEFINITION':([0,],[1,]),'BODY':([4,],[5,]),'IMPORT_DECLARATIONS':([6,],[7,]),'TOP_DECLARATIONS':([6,34,],[8,80,]),'IMPORT_DECLARATION':([6,34,],[9,81,]),'TOP_DECLARATION':([6,34,36,],[10,10,82,]),'DECLARATION':([6,34,36,141,188,],[16,16,16,171,171,]),'GEN_DECLARATION':([6,34,36,141,188,],[17,17,17,17,17,]),'FUNCTION_LHS':([6,23,34,36,141,188,],[18,70,18,18,18,18,]),'PAT':([6,23,30,34,36,42,51,74,118,124,141,188,190,205,],[19,72,79,19,19,90,113,119,79,157,19,19,199,199,]),'APAT':([6,12,23,27,30,34,36,40,42,51,73,74,76,88,97,116,118,124,139,141,153,188,190,205,],[22,40,22,76,22,22,22,88,22,22,40,22,88,88,139,153,22,22,88,22,88,22,22,22,]),'LPAT':([6,23,30,34,36,42,51,74,118,124,141,188,190,205,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'GCON':([6,12,23,27,30,34,36,40,42,46,49,51,73,74,76,88,96,97,99,100,101,104,106,107,110,116,118,124,136,139,141,145,153,168,172,176,178,185,188,190,196,200,205,206,],[27,41,27,41,27,27,27,41,27,104,104,27,41,27,41,41,104,41,104,104,104,104,104,104,104,41,27,27,104,41,27,104,41,104,104,104,104,104,27,27,104,104,27,104,]),'PARAM':([6,12,23,27,30,34,36,40,42,51,73,74,76,88,97,116,118,124,139,141,153,188,190,205,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'LITERAL':([6,12,23,27,30,34,36,40,42,46,49,51,73,74,76,88,96,97,99,100,101,104,106,107,110,116,118,124,136,139,141,145,153,168,172,176,178,185,188,190,196,200,205,206,],[29,29,29,29,29,29,29,29,29,105,105,29,29,29,29,29,105,29,105,105,105,105,105,105,105,29,29,29,105,29,29,105,29,105,105,105,105,105,29,29,105,105,29,105,]),'RHS':([18,19,],[45,50,]),'GDRHS':([18,19,150,],[47,47,179,]),'GUARDS':([18,19,150,],[48,48,48,]),'VAROP':([19,72,95,115,],[51,51,137,137,]),'VARSYM':([19,72,95,115,],[52,52,52,52,]),'ASSOCIATIVITY':([20,],[66,]),'PAT_LIST':([30,118,],[77,154,]),'TYPE':([39,86,87,91,126,160,],[83,128,129,131,158,182,]),'ATYPE':([39,86,87,91,126,160,163,],[84,84,84,84,84,84,183,]),'APATS':([40,76,88,139,153,],[89,122,130,167,180,]),'EXP':([46,99,100,104,106,107,110,145,168,172,176,178,185,196,200,206,],[93,142,143,146,147,148,150,174,186,189,191,191,194,203,207,209,]),'INFIX_EXP':([46,49,96,99,100,104,106,107,110,136,145,168,172,176,178,185,196,200,206,],[94,112,138,94,94,94,94,94,94,166,94,94,94,94,94,94,94,94,94,]),'LEXP':([46,49,96,99,100,104,106,107,110,136,145,168,172,176,178,185,196,200,206,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'FEXP':([46,49,96,99,100,104,106,107,110,136,145,168,172,176,178,185,196,200,206,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'AEXP':([46,49,96,99,100,101,104,106,107,110,136,145,168,172,176,178,185,196,200,206,],[102,102,102,102,102,144,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'USED_VAR':([46,49,96,99,100,101,104,106,107,110,136,145,168,172,176,178,185,196,200,206,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'GUARD':([49,],[111,]),'TYPES_LIST':([86,],[127,]),'CONSTRUCTORS':([92,],[133,]),'CONSTRUCTOR':([92,164,],[134,184,]),'OP':([95,115,],[136,152,]),'DECLARATIONS':([98,109,135,],[140,149,165,]),'EXPS':([104,],[145,]),'ATYPES':([132,],[163,]),'DECLARATIONS_LIST':([141,188,],[169,195,]),'EXP_LIST':([176,178,],[192,193,]),'ALTS':([190,205,],[197,208,]),'ALT':([190,205,],[198,198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MODULE_DEFINITION","S'",1,None,None,None),
  ('MODULE_DEFINITION -> MODULE IDENTIFIER WHERE BODY','MODULE_DEFINITION',4,'p_MODULE_DEFINITION','funky_parser.py',21),
  ('BODY -> OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE','BODY',5,'p_BODY','funky_parser.py',27),
  ('BODY -> OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE','BODY',3,'p_BODY','funky_parser.py',28),
  ('IMPORT_DECLARATIONS -> IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION','IMPORT_DECLARATIONS',3,'p_IMPORT_DECLARATIONS','funky_parser.py',40),
  ('IMPORT_DECLARATIONS -> IMPORT_DECLARATION','IMPORT_DECLARATIONS',1,'p_IMPORT_DECLARATIONS','funky_parser.py',41),
  ('IMPORT_DECLARATION -> IMPORT IDENTIFIER','IMPORT_DECLARATION',2,'p_IMPORT_DECLARATION','funky_parser.py',49),
  ('TOP_DECLARATIONS -> TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION','TOP_DECLARATIONS',3,'p_TOP_DECLARATIONS','funky_parser.py',54),
  ('TOP_DECLARATIONS -> TOP_DECLARATION','TOP_DECLARATIONS',1,'p_TOP_DECLARATIONS','funky_parser.py',55),
  ('TOP_DECLARATION -> NEWTYPE TYPENAME EQUALS TYPE','TOP_DECLARATION',4,'p_TOP_DECLARATION','funky_parser.py',63),
  ('TOP_DECLARATION -> NEWCONS TYPENAME EQUALS CONSTRUCTORS','TOP_DECLARATION',4,'p_TOP_DECLARATION','funky_parser.py',64),
  ('TOP_DECLARATION -> DECLARATION','TOP_DECLARATION',1,'p_TOP_DECLARATION','funky_parser.py',65),
  ('CONSTRUCTORS -> CONSTRUCTORS PIPE CONSTRUCTOR','CONSTRUCTORS',3,'p_CONSTRUCTORS','funky_parser.py',75),
  ('CONSTRUCTORS -> CONSTRUCTOR','CONSTRUCTORS',1,'p_CONSTRUCTORS','funky_parser.py',76),
  ('CONSTRUCTOR -> TYPENAME ATYPES','CONSTRUCTOR',2,'p_CONSTRUCTOR','funky_parser.py',84),
  ('DECLARATIONS -> OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE','DECLARATIONS',3,'p_DECLARATIONS','funky_parser.py',88),
  ('DECLARATIONS -> OPEN_BRACE CLOSE_BRACE','DECLARATIONS',2,'p_DECLARATIONS','funky_parser.py',89),
  ('DECLARATIONS_LIST -> DECLARATION ENDSTATEMENT DECLARATIONS_LIST','DECLARATIONS_LIST',3,'p_DECLARATIONS_LIST','funky_parser.py',97),
  ('DECLARATIONS_LIST -> DECLARATION','DECLARATIONS_LIST',1,'p_DECLARATIONS_LIST','funky_parser.py',98),
  ('DECLARATION -> GEN_DECLARATION','DECLARATION',1,'p_DECLARATION','funky_parser.py',106),
  ('DECLARATION -> FUNCTION_LHS RHS','DECLARATION',2,'p_DECLARATION','funky_parser.py',107),
  ('DECLARATION -> PAT RHS','DECLARATION',2,'p_DECLARATION','funky_parser.py',108),
  ('GEN_DECLARATION -> IDENTIFIER TYPESIG TYPE','GEN_DECLARATION',3,'p_GEN_DECLARATION','funky_parser.py',118),
  ('GEN_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP','GEN_DECLARATION',4,'p_GEN_DECLARATION','funky_parser.py',119),
  ('GEN_DECLARATION -> <empty>','GEN_DECLARATION',0,'p_GEN_DECLARATION','funky_parser.py',120),
  ('ASSOCIATIVITY -> LEFTASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',128),
  ('ASSOCIATIVITY -> RIGHTASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',129),
  ('ASSOCIATIVITY -> NONASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',130),
  ('TYPE -> ATYPE','TYPE',1,'p_TYPE','funky_parser.py',135),
  ('TYPE -> ATYPE ARROW TYPE','TYPE',3,'p_TYPE','funky_parser.py',136),
  ('ATYPES -> ATYPES ATYPE','ATYPES',2,'p_ATYPES','funky_parser.py',144),
  ('ATYPES -> <empty>','ATYPES',0,'p_ATYPES','funky_parser.py',145),
  ('ATYPE -> TYPENAME','ATYPE',1,'p_ATYPE','funky_parser.py',153),
  ('ATYPE -> OPEN_PAREN TYPES_LIST CLOSE_PAREN','ATYPE',3,'p_ATYPE','funky_parser.py',154),
  ('ATYPE -> OPEN_PAREN TYPE CLOSE_PAREN','ATYPE',3,'p_ATYPE','funky_parser.py',155),
  ('ATYPE -> OPEN_SQUARE TYPE CLOSE_SQUARE','ATYPE',3,'p_ATYPE','funky_parser.py',156),
  ('FUNCTION_LHS -> IDENTIFIER APAT APATS','FUNCTION_LHS',3,'p_FUNCTION_LHS','funky_parser.py',169),
  ('FUNCTION_LHS -> PAT VAROP PAT','FUNCTION_LHS',3,'p_FUNCTION_LHS','funky_parser.py',170),
  ('FUNCTION_LHS -> OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS','FUNCTION_LHS',5,'p_FUNCTION_LHS','funky_parser.py',171),
  ('RHS -> EQUALS EXP','RHS',2,'p_RHS','funky_parser.py',183),
  ('RHS -> EQUALS EXP WHERE DECLARATIONS','RHS',4,'p_RHS','funky_parser.py',184),
  ('RHS -> GDRHS','RHS',1,'p_RHS','funky_parser.py',185),
  ('RHS -> GDRHS WHERE DECLARATIONS','RHS',3,'p_RHS','funky_parser.py',186),
  ('GDRHS -> GUARDS EQUALS EXP','GDRHS',3,'p_GDRHS','funky_parser.py',199),
  ('GDRHS -> GUARDS EQUALS EXP GDRHS','GDRHS',4,'p_GDRHS','funky_parser.py',200),
  ('GUARDS -> PIPE GUARD','GUARDS',2,'p_GUARDS','funky_parser.py',208),
  ('GUARD -> INFIX_EXP','GUARD',1,'p_GUARD','funky_parser.py',213),
  ('EXPS -> EXPS EXP','EXPS',2,'p_EXPS','funky_parser.py',219),
  ('EXPS -> EXP','EXPS',1,'p_EXPS','funky_parser.py',220),
  ('EXP -> INFIX_EXP','EXP',1,'p_EXP','funky_parser.py',228),
  ('INFIX_EXP -> LEXP OP INFIX_EXP','INFIX_EXP',3,'p_INFIX_EXP','funky_parser.py',234),
  ('INFIX_EXP -> MINUS INFIX_EXP','INFIX_EXP',2,'p_INFIX_EXP','funky_parser.py',235),
  ('INFIX_EXP -> LEXP','INFIX_EXP',1,'p_INFIX_EXP','funky_parser.py',236),
  ('LEXP -> LAMBDA APAT APATS ARROW EXP','LEXP',5,'p_LEXP','funky_parser.py',254),
  ('LEXP -> LET DECLARATIONS IN EXP','LEXP',4,'p_LEXP','funky_parser.py',255),
  ('LEXP -> IF EXP THEN EXP ELSE EXP','LEXP',6,'p_LEXP','funky_parser.py',256),
  ('LEXP -> MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE','LEXP',6,'p_LEXP','funky_parser.py',257),
  ('LEXP -> FEXP','LEXP',1,'p_LEXP','funky_parser.py',258),
  ('FEXP -> FEXP AEXP','FEXP',2,'p_FEXP','funky_parser.py',273),
  ('FEXP -> AEXP','FEXP',1,'p_FEXP','funky_parser.py',274),
  ('AEXP -> USED_VAR','AEXP',1,'p_AEXP','funky_parser.py',282),
  ('AEXP -> GCON','AEXP',1,'p_AEXP','funky_parser.py',283),
  ('AEXP -> LITERAL','AEXP',1,'p_AEXP','funky_parser.py',284),
  ('AEXP -> OPEN_PAREN EXP CLOSE_PAREN','AEXP',3,'p_AEXP','funky_parser.py',285),
  ('AEXP -> OPEN_PAREN EXP COMMA EXP_LIST CLOSE_PAREN','AEXP',5,'p_AEXP','funky_parser.py',286),
  ('AEXP -> OPEN_SQUARE EXP CLOSE_SQUARE','AEXP',3,'p_AEXP','funky_parser.py',287),
  ('AEXP -> OPEN_SQUARE EXP COMMA EXP_LIST CLOSE_SQUARE','AEXP',5,'p_AEXP','funky_parser.py',288),
  ('AEXP -> GCON EXPS','AEXP',2,'p_AEXP','funky_parser.py',289),
  ('ALTS -> ALT ENDSTATEMENT ALTS','ALTS',3,'p_ALTS','funky_parser.py',312),
  ('ALTS -> ALT','ALTS',1,'p_ALTS','funky_parser.py',313),
  ('ALT -> PAT ARROW EXP','ALT',3,'p_ALT','funky_parser.py',321),
  ('ALT -> <empty>','ALT',0,'p_ALT','funky_parser.py',322),
  ('PAT -> LPAT LIST_CONSTRUCTOR PAT','PAT',3,'p_PAT','funky_parser.py',327),
  ('PAT -> LPAT','PAT',1,'p_PAT','funky_parser.py',328),
  ('LPAT -> APAT','LPAT',1,'p_LPAT','funky_parser.py',336),
  ('LPAT -> MINUS OPEN_PAREN INTEGER CLOSE_PAREN','LPAT',4,'p_LPAT','funky_parser.py',337),
  ('LPAT -> MINUS OPEN_PAREN FLOAT CLOSE_PAREN','LPAT',4,'p_LPAT','funky_parser.py',338),
  ('LPAT -> GCON APAT APATS','LPAT',3,'p_LPAT','funky_parser.py',339),
  ('APAT -> PARAM','APAT',1,'p_APAT','funky_parser.py',350),
  ('APAT -> GCON','APAT',1,'p_APAT','funky_parser.py',351),
  ('APAT -> LITERAL','APAT',1,'p_APAT','funky_parser.py',352),
  ('APAT -> OPEN_PAREN PAT CLOSE_PAREN','APAT',3,'p_APAT','funky_parser.py',353),
  ('APAT -> OPEN_PAREN PAT COMMA PAT_LIST CLOSE_PAREN','APAT',5,'p_APAT','funky_parser.py',354),
  ('APAT -> OPEN_SQUARE PAT_LIST CLOSE_SQUARE','APAT',3,'p_APAT','funky_parser.py',355),
  ('GCON -> OPEN_PAREN CLOSE_PAREN','GCON',2,'p_GCON','funky_parser.py',372),
  ('GCON -> OPEN_SQUARE CLOSE_SQUARE','GCON',2,'p_GCON','funky_parser.py',373),
  ('GCON -> TYPENAME','GCON',1,'p_GCON','funky_parser.py',374),
  ('VAROP -> VARSYM','VAROP',1,'p_VAROP','funky_parser.py',384),
  ('VAROP -> BACKTICK IDENTIFIER BACKTICK','VAROP',3,'p_VAROP','funky_parser.py',385),
  ('OP -> VAROP','OP',1,'p_OP','funky_parser.py',395),
  ('EXP_LIST -> EXP_LIST COMMA EXP','EXP_LIST',3,'p_EXP_LIST','funky_parser.py',400),
  ('EXP_LIST -> EXP','EXP_LIST',1,'p_EXP_LIST','funky_parser.py',401),
  ('APATS -> APAT APATS','APATS',2,'p_APATS','funky_parser.py',409),
  ('APATS -> <empty>','APATS',0,'p_APATS','funky_parser.py',410),
  ('PAT_LIST -> PAT_LIST COMMA PAT','PAT_LIST',3,'p_PAT_LIST','funky_parser.py',418),
  ('PAT_LIST -> PAT','PAT_LIST',1,'p_PAT_LIST','funky_parser.py',419),
  ('VARSYM -> PLUS','VARSYM',1,'p_VARSYM','funky_parser.py',428),
  ('VARSYM -> MINUS','VARSYM',1,'p_VARSYM','funky_parser.py',429),
  ('VARSYM -> TIMES','VARSYM',1,'p_VARSYM','funky_parser.py',430),
  ('VARSYM -> DIVIDE','VARSYM',1,'p_VARSYM','funky_parser.py',431),
  ('VARSYM -> POW','VARSYM',1,'p_VARSYM','funky_parser.py',432),
  ('VARSYM -> EQUALITY','VARSYM',1,'p_VARSYM','funky_parser.py',433),
  ('VARSYM -> INEQUALITY','VARSYM',1,'p_VARSYM','funky_parser.py',434),
  ('VARSYM -> LESS','VARSYM',1,'p_VARSYM','funky_parser.py',435),
  ('VARSYM -> LEQ','VARSYM',1,'p_VARSYM','funky_parser.py',436),
  ('VARSYM -> GREATER','VARSYM',1,'p_VARSYM','funky_parser.py',437),
  ('VARSYM -> GEQ','VARSYM',1,'p_VARSYM','funky_parser.py',438),
  ('VARSYM -> LIST_CONSTRUCTOR','VARSYM',1,'p_VARSYM','funky_parser.py',439),
  ('TYPES_LIST -> TYPES_LIST COMMA TYPE','TYPES_LIST',3,'p_TYPES_LIST','funky_parser.py',444),
  ('TYPES_LIST -> TYPE','TYPES_LIST',1,'p_TYPES_LIST','funky_parser.py',445),
  ('LITERAL -> FLOAT','LITERAL',1,'p_LITERAL','funky_parser.py',453),
  ('LITERAL -> INTEGER','LITERAL',1,'p_LITERAL','funky_parser.py',454),
  ('LITERAL -> BOOL','LITERAL',1,'p_LITERAL','funky_parser.py',455),
  ('LITERAL -> CHAR','LITERAL',1,'p_LITERAL','funky_parser.py',456),
  ('LITERAL -> STRING','LITERAL',1,'p_LITERAL','funky_parser.py',457),
  ('USED_VAR -> IDENTIFIER','USED_VAR',1,'p_USED_VAR','funky_parser.py',462),
  ('PARAM -> IDENTIFIER','PARAM',1,'p_PARAM','funky_parser.py',466),
]
