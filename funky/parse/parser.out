Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WHITESPACE

Grammar

Rule 0     S' -> FIXITY_DECLARATION
Rule 1     MODULE_DEFINITION -> MODULE IDENTIFIER WHERE BODY
Rule 2     BODY -> OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE
Rule 3     BODY -> OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE
Rule 4     IMPORT_DECLARATIONS -> IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION
Rule 5     IMPORT_DECLARATIONS -> IMPORT_DECLARATION
Rule 6     IMPORT_DECLARATION -> IMPORT IDENTIFIER
Rule 7     TOP_DECLARATIONS -> TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION
Rule 8     TOP_DECLARATIONS -> TOP_DECLARATION
Rule 9     TOP_DECLARATION -> TYPE_DECLARATION
Rule 10    TOP_DECLARATION -> DECLARATION
Rule 11    TYPE_DECLARATION -> NEWTYPE TYPENAME TYVARS EQUALS CONSTRUCTORS
Rule 12    TYVARS -> TYVARS IDENTIFIER
Rule 13    TYVARS -> <empty>
Rule 14    CONSTRUCTORS -> CONSTRUCTORS PIPE CONSTRUCTOR
Rule 15    CONSTRUCTORS -> CONSTRUCTOR
Rule 16    CONSTRUCTOR -> TYPENAME ATYPES
Rule 17    DECLARATIONS -> OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE
Rule 18    DECLARATIONS -> OPEN_BRACE CLOSE_BRACE
Rule 19    DECLARATIONS_LIST -> DECLARATION ENDSTATEMENT DECLARATIONS_LIST
Rule 20    DECLARATIONS_LIST -> DECLARATION
Rule 21    DECLARATION -> GEN_DECLARATION
Rule 22    DECLARATION -> FUNCTION_LHS RHS
Rule 23    DECLARATION -> LPAT RHS
Rule 24    GEN_DECLARATION -> FIXITY_DECLARATION
Rule 25    GEN_DECLARATION -> <empty>
Rule 26    FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP
Rule 27    ASSOCIATIVITY -> LEFTASSOC
Rule 28    ASSOCIATIVITY -> RIGHTASSOC
Rule 29    ASSOCIATIVITY -> NONASSOC
Rule 30    TYPE -> ATYPE
Rule 31    TYPE -> ATYPE ARROW TYPE
Rule 32    ATYPES -> ATYPES ATYPE
Rule 33    ATYPES -> <empty>
Rule 34    ATYPE -> TYPENAME
Rule 35    ATYPE -> IDENTIFIER
Rule 36    ATYPE -> OPEN_PAREN TYPE CLOSE_PAREN
Rule 37    FUNCTION_LHS -> IDENTIFIER APAT APATS
Rule 38    FUNCTION_LHS -> LPAT VAROP LPAT
Rule 39    FUNCTION_LHS -> OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS
Rule 40    RHS -> EQUALS EXP
Rule 41    RHS -> EQUALS EXP WHERE DECLARATIONS
Rule 42    RHS -> GDRHS
Rule 43    RHS -> GDRHS WHERE DECLARATIONS
Rule 44    GDRHS -> GIVEN EXP EQUALS EXP
Rule 45    GDRHS -> GIVEN EXP EQUALS EXP GDRHS
Rule 46    EXP -> INFIX_EXP
Rule 47    INFIX_EXP -> LEXP OP INFIX_EXP
Rule 48    INFIX_EXP -> MINUS INFIX_EXP
Rule 49    INFIX_EXP -> LEXP
Rule 50    LEXP -> LAMBDA APAT APATS ARROW EXP
Rule 51    LEXP -> LET DECLARATIONS IN EXP
Rule 52    LEXP -> EXP IF EXP ELSE EXP
Rule 53    LEXP -> MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE
Rule 54    LEXP -> FEXP
Rule 55    FEXP -> FEXP AEXP
Rule 56    FEXP -> AEXP
Rule 57    AEXP -> USED_VAR
Rule 58    AEXP -> TYPENAME
Rule 59    AEXP -> LITERAL
Rule 60    AEXP -> OPEN_PAREN EXP CLOSE_PAREN
Rule 61    CONSTRUCTION_PARAMS -> CONSTRUCTION_PARAMS AEXP
Rule 62    CONSTRUCTION_PARAMS -> AEXP
Rule 63    ALTS -> ALT ENDSTATEMENT ALTS
Rule 64    ALTS -> ALT
Rule 65    ALT -> LPAT ARROW EXP
Rule 66    ALT -> <empty>
Rule 67    LPAT -> APAT
Rule 68    LPAT -> MINUS OPEN_PAREN INTEGER CLOSE_PAREN
Rule 69    LPAT -> MINUS OPEN_PAREN FLOAT CLOSE_PAREN
Rule 70    LPAT -> TYPENAME APAT APATS
Rule 71    APAT -> PARAM
Rule 72    APAT -> TYPENAME
Rule 73    APAT -> LITERAL
Rule 74    APAT -> OPEN_PAREN LPAT CLOSE_PAREN
Rule 75    VAROP -> VARSYM
Rule 76    VAROP -> BACKTICK IDENTIFIER BACKTICK
Rule 77    OP -> VAROP
Rule 78    APATS -> APAT APATS
Rule 79    APATS -> <empty>
Rule 80    VARSYM -> PLUS
Rule 81    VARSYM -> MINUS
Rule 82    VARSYM -> TIMES
Rule 83    VARSYM -> DIVIDE
Rule 84    VARSYM -> MODULO
Rule 85    VARSYM -> POW
Rule 86    VARSYM -> EQUALITY
Rule 87    VARSYM -> INEQUALITY
Rule 88    VARSYM -> LESS
Rule 89    VARSYM -> LEQ
Rule 90    VARSYM -> GREATER
Rule 91    VARSYM -> GEQ
Rule 92    VARSYM -> AND
Rule 93    VARSYM -> OR
Rule 94    LITERAL -> FLOAT
Rule 95    LITERAL -> INTEGER
Rule 96    LITERAL -> BOOL
Rule 97    LITERAL -> CHAR
Rule 98    LITERAL -> STRING
Rule 99    USED_VAR -> IDENTIFIER
Rule 100   PARAM -> IDENTIFIER

Terminals, with rules where they appear

AND                  : 92
ARROW                : 31 50 65
BACKTICK             : 76 76
BOOL                 : 96
CHAR                 : 97
CLOSE_BRACE          : 2 3 17 18 53
CLOSE_PAREN          : 36 39 60 68 69 74
DIVIDE               : 83
ELSE                 : 52
ENDSTATEMENT         : 2 4 7 19 63
EQUALITY             : 86
EQUALS               : 11 40 41 44 45
FLOAT                : 69 94
GEQ                  : 91
GIVEN                : 44 45
GREATER              : 90
IDENTIFIER           : 1 6 12 35 37 76 99 100
IF                   : 52
IMPORT               : 6
IN                   : 51
INEQUALITY           : 87
INTEGER              : 26 68 95
LAMBDA               : 50
LEFTASSOC            : 27
LEQ                  : 89
LESS                 : 88
LET                  : 51
MATCH                : 53
MINUS                : 48 68 69 81
MODULE               : 1
MODULO               : 84
NEWTYPE              : 11
NONASSOC             : 29
OF                   : 53
OPEN_BRACE           : 2 3 17 18 53
OPEN_PAREN           : 36 39 60 68 69 74
OR                   : 93
PIPE                 : 14
PLUS                 : 80
POW                  : 85
RIGHTASSOC           : 28
SETFIX               : 26
STRING               : 98
TIMES                : 82
TYPENAME             : 11 16 34 58 70 72
WHERE                : 1 41 43
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

AEXP                 : 55 56 61 62
ALT                  : 63 64
ALTS                 : 53 63
APAT                 : 37 39 50 67 70 78
APATS                : 37 39 50 70 78
ASSOCIATIVITY        : 26
ATYPE                : 30 31 32
ATYPES               : 16 32
BODY                 : 1
CONSTRUCTION_PARAMS  : 61
CONSTRUCTOR          : 14 15
CONSTRUCTORS         : 11 14
DECLARATION          : 10 19 20
DECLARATIONS         : 41 43 51
DECLARATIONS_LIST    : 17 19
EXP                  : 40 41 44 44 45 45 50 51 52 52 52 53 60 65
FEXP                 : 54 55
FIXITY_DECLARATION   : 24 0
FUNCTION_LHS         : 22 39
GDRHS                : 42 43 45
GEN_DECLARATION      : 21
IMPORT_DECLARATION   : 4 5
IMPORT_DECLARATIONS  : 2 4
INFIX_EXP            : 46 47 48
LEXP                 : 47 49
LITERAL              : 59 73
LPAT                 : 23 38 38 65 74
MODULE_DEFINITION    : 
OP                   : 26 47
PARAM                : 71
RHS                  : 22 23
TOP_DECLARATION      : 7 8
TOP_DECLARATIONS     : 2 3 7
TYPE                 : 31 36
TYPE_DECLARATION     : 9
TYVARS               : 11 12
USED_VAR             : 57
VAROP                : 38 77
VARSYM               : 75

Parsing method: LALR

state 0

    (0) S' -> . FIXITY_DECLARATION
    (26) FIXITY_DECLARATION -> . SETFIX ASSOCIATIVITY INTEGER OP

    SETFIX          shift and go to state 2

    FIXITY_DECLARATION             shift and go to state 1

state 1

    (0) S' -> FIXITY_DECLARATION .



state 2

    (26) FIXITY_DECLARATION -> SETFIX . ASSOCIATIVITY INTEGER OP
    (27) ASSOCIATIVITY -> . LEFTASSOC
    (28) ASSOCIATIVITY -> . RIGHTASSOC
    (29) ASSOCIATIVITY -> . NONASSOC

    LEFTASSOC       shift and go to state 4
    RIGHTASSOC      shift and go to state 5
    NONASSOC        shift and go to state 6

    ASSOCIATIVITY                  shift and go to state 3

state 3

    (26) FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY . INTEGER OP

    INTEGER         shift and go to state 7


state 4

    (27) ASSOCIATIVITY -> LEFTASSOC .

    INTEGER         reduce using rule 27 (ASSOCIATIVITY -> LEFTASSOC .)


state 5

    (28) ASSOCIATIVITY -> RIGHTASSOC .

    INTEGER         reduce using rule 28 (ASSOCIATIVITY -> RIGHTASSOC .)


state 6

    (29) ASSOCIATIVITY -> NONASSOC .

    INTEGER         reduce using rule 29 (ASSOCIATIVITY -> NONASSOC .)


state 7

    (26) FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER . OP
    (77) OP -> . VAROP
    (75) VAROP -> . VARSYM
    (76) VAROP -> . BACKTICK IDENTIFIER BACKTICK
    (80) VARSYM -> . PLUS
    (81) VARSYM -> . MINUS
    (82) VARSYM -> . TIMES
    (83) VARSYM -> . DIVIDE
    (84) VARSYM -> . MODULO
    (85) VARSYM -> . POW
    (86) VARSYM -> . EQUALITY
    (87) VARSYM -> . INEQUALITY
    (88) VARSYM -> . LESS
    (89) VARSYM -> . LEQ
    (90) VARSYM -> . GREATER
    (91) VARSYM -> . GEQ
    (92) VARSYM -> . AND
    (93) VARSYM -> . OR

    BACKTICK        shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    MODULO          shift and go to state 16
    POW             shift and go to state 17
    EQUALITY        shift and go to state 18
    INEQUALITY      shift and go to state 19
    LESS            shift and go to state 20
    LEQ             shift and go to state 21
    GREATER         shift and go to state 22
    GEQ             shift and go to state 23
    AND             shift and go to state 24
    OR              shift and go to state 25

    OP                             shift and go to state 8
    VAROP                          shift and go to state 9
    VARSYM                         shift and go to state 10

state 8

    (26) FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP .

    $end            reduce using rule 26 (FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP .)


state 9

    (77) OP -> VAROP .

    $end            reduce using rule 77 (OP -> VAROP .)


state 10

    (75) VAROP -> VARSYM .

    $end            reduce using rule 75 (VAROP -> VARSYM .)


state 11

    (76) VAROP -> BACKTICK . IDENTIFIER BACKTICK

    IDENTIFIER      shift and go to state 26


state 12

    (80) VARSYM -> PLUS .

    $end            reduce using rule 80 (VARSYM -> PLUS .)


state 13

    (81) VARSYM -> MINUS .

    $end            reduce using rule 81 (VARSYM -> MINUS .)


state 14

    (82) VARSYM -> TIMES .

    $end            reduce using rule 82 (VARSYM -> TIMES .)


state 15

    (83) VARSYM -> DIVIDE .

    $end            reduce using rule 83 (VARSYM -> DIVIDE .)


state 16

    (84) VARSYM -> MODULO .

    $end            reduce using rule 84 (VARSYM -> MODULO .)


state 17

    (85) VARSYM -> POW .

    $end            reduce using rule 85 (VARSYM -> POW .)


state 18

    (86) VARSYM -> EQUALITY .

    $end            reduce using rule 86 (VARSYM -> EQUALITY .)


state 19

    (87) VARSYM -> INEQUALITY .

    $end            reduce using rule 87 (VARSYM -> INEQUALITY .)


state 20

    (88) VARSYM -> LESS .

    $end            reduce using rule 88 (VARSYM -> LESS .)


state 21

    (89) VARSYM -> LEQ .

    $end            reduce using rule 89 (VARSYM -> LEQ .)


state 22

    (90) VARSYM -> GREATER .

    $end            reduce using rule 90 (VARSYM -> GREATER .)


state 23

    (91) VARSYM -> GEQ .

    $end            reduce using rule 91 (VARSYM -> GEQ .)


state 24

    (92) VARSYM -> AND .

    $end            reduce using rule 92 (VARSYM -> AND .)


state 25

    (93) VARSYM -> OR .

    $end            reduce using rule 93 (VARSYM -> OR .)


state 26

    (76) VAROP -> BACKTICK IDENTIFIER . BACKTICK

    BACKTICK        shift and go to state 27


state 27

    (76) VAROP -> BACKTICK IDENTIFIER BACKTICK .

    $end            reduce using rule 76 (VAROP -> BACKTICK IDENTIFIER BACKTICK .)

