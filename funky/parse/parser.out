Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_SQUARE
    NEWTYPE
    OPEN_SQUARE
    THEN
    WHITESPACE

Grammar

Rule 0     S' -> FIXITY_DECLARATION
Rule 1     MODULE_DEFINITION -> MODULE IDENTIFIER WHERE BODY
Rule 2     BODY -> OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE
Rule 3     BODY -> OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE
Rule 4     IMPORT_DECLARATIONS -> IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION
Rule 5     IMPORT_DECLARATIONS -> IMPORT_DECLARATION
Rule 6     IMPORT_DECLARATION -> IMPORT IDENTIFIER
Rule 7     TOP_DECLARATIONS -> TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION
Rule 8     TOP_DECLARATIONS -> TOP_DECLARATION
Rule 9     TOP_DECLARATION -> NEW_CONS
Rule 10    TOP_DECLARATION -> DECLARATION
Rule 11    NEW_CONS -> NEWCONS TYPENAME EQUALS CONSTRUCTORS
Rule 12    CONSTRUCTORS -> CONSTRUCTORS PIPE CONSTRUCTOR
Rule 13    CONSTRUCTORS -> CONSTRUCTOR
Rule 14    CONSTRUCTOR -> TYPENAME ATYPES
Rule 15    DECLARATIONS -> OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE
Rule 16    DECLARATIONS -> OPEN_BRACE CLOSE_BRACE
Rule 17    DECLARATIONS_LIST -> DECLARATION ENDSTATEMENT DECLARATIONS_LIST
Rule 18    DECLARATIONS_LIST -> DECLARATION
Rule 19    DECLARATION -> GEN_DECLARATION
Rule 20    DECLARATION -> FUNCTION_LHS RHS
Rule 21    DECLARATION -> LPAT RHS
Rule 22    GEN_DECLARATION -> FIXITY_DECLARATION
Rule 23    GEN_DECLARATION -> <empty>
Rule 24    FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP
Rule 25    ASSOCIATIVITY -> LEFTASSOC
Rule 26    ASSOCIATIVITY -> RIGHTASSOC
Rule 27    ASSOCIATIVITY -> NONASSOC
Rule 28    TYPE -> ATYPE
Rule 29    TYPE -> ATYPE ARROW TYPE
Rule 30    ATYPES -> ATYPES ATYPE
Rule 31    ATYPES -> <empty>
Rule 32    ATYPE -> TYPENAME
Rule 33    ATYPE -> OPEN_PAREN TYPE CLOSE_PAREN
Rule 34    FUNCTION_LHS -> IDENTIFIER APAT APATS
Rule 35    FUNCTION_LHS -> LPAT VAROP LPAT
Rule 36    FUNCTION_LHS -> OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS
Rule 37    RHS -> EQUALS EXP
Rule 38    RHS -> EQUALS EXP WHERE DECLARATIONS
Rule 39    RHS -> GDRHS
Rule 40    RHS -> GDRHS WHERE DECLARATIONS
Rule 41    GDRHS -> PIPE EXP EQUALS EXP
Rule 42    GDRHS -> PIPE EXP EQUALS EXP GDRHS
Rule 43    EXP -> INFIX_EXP
Rule 44    INFIX_EXP -> LEXP OP INFIX_EXP
Rule 45    INFIX_EXP -> MINUS INFIX_EXP
Rule 46    INFIX_EXP -> LEXP
Rule 47    LEXP -> LAMBDA APAT APATS ARROW EXP
Rule 48    LEXP -> LET DECLARATIONS IN EXP
Rule 49    LEXP -> EXP IF EXP ELSE EXP
Rule 50    LEXP -> MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE
Rule 51    LEXP -> FEXP
Rule 52    FEXP -> FEXP AEXP
Rule 53    FEXP -> AEXP
Rule 54    AEXP -> USED_VAR
Rule 55    AEXP -> TYPENAME
Rule 56    AEXP -> LITERAL
Rule 57    AEXP -> OPEN_PAREN EXP CLOSE_PAREN
Rule 58    CONSTRUCTION_PARAMS -> CONSTRUCTION_PARAMS AEXP
Rule 59    CONSTRUCTION_PARAMS -> AEXP
Rule 60    ALTS -> ALT ENDSTATEMENT ALTS
Rule 61    ALTS -> ALT
Rule 62    ALT -> LPAT ARROW EXP
Rule 63    ALT -> <empty>
Rule 64    LPAT -> APAT
Rule 65    LPAT -> MINUS OPEN_PAREN INTEGER CLOSE_PAREN
Rule 66    LPAT -> MINUS OPEN_PAREN FLOAT CLOSE_PAREN
Rule 67    LPAT -> TYPENAME APAT APATS
Rule 68    APAT -> PARAM
Rule 69    APAT -> TYPENAME
Rule 70    APAT -> LITERAL
Rule 71    APAT -> OPEN_PAREN LPAT CLOSE_PAREN
Rule 72    VAROP -> VARSYM
Rule 73    VAROP -> BACKTICK IDENTIFIER BACKTICK
Rule 74    OP -> VAROP
Rule 75    APATS -> APAT APATS
Rule 76    APATS -> <empty>
Rule 77    VARSYM -> PLUS
Rule 78    VARSYM -> MINUS
Rule 79    VARSYM -> TIMES
Rule 80    VARSYM -> DIVIDE
Rule 81    VARSYM -> MODULO
Rule 82    VARSYM -> POW
Rule 83    VARSYM -> EQUALITY
Rule 84    VARSYM -> INEQUALITY
Rule 85    VARSYM -> LESS
Rule 86    VARSYM -> LEQ
Rule 87    VARSYM -> GREATER
Rule 88    VARSYM -> GEQ
Rule 89    VARSYM -> AND
Rule 90    VARSYM -> OR
Rule 91    LITERAL -> FLOAT
Rule 92    LITERAL -> INTEGER
Rule 93    LITERAL -> BOOL
Rule 94    LITERAL -> CHAR
Rule 95    LITERAL -> STRING
Rule 96    USED_VAR -> IDENTIFIER
Rule 97    PARAM -> IDENTIFIER

Terminals, with rules where they appear

AND                  : 89
ARROW                : 29 47 62
BACKTICK             : 73 73
BOOL                 : 93
CHAR                 : 94
CLOSE_BRACE          : 2 3 15 16 50
CLOSE_PAREN          : 33 36 57 65 66 71
CLOSE_SQUARE         : 
DIVIDE               : 80
ELSE                 : 49
ENDSTATEMENT         : 2 4 7 17 60
EQUALITY             : 83
EQUALS               : 11 37 38 41 42
FLOAT                : 66 91
GEQ                  : 88
GREATER              : 87
IDENTIFIER           : 1 6 34 73 96 97
IF                   : 49
IMPORT               : 6
IN                   : 48
INEQUALITY           : 84
INTEGER              : 24 65 92
LAMBDA               : 47
LEFTASSOC            : 25
LEQ                  : 86
LESS                 : 85
LET                  : 48
MATCH                : 50
MINUS                : 45 65 66 78
MODULE               : 1
MODULO               : 81
NEWCONS              : 11
NEWTYPE              : 
NONASSOC             : 27
OF                   : 50
OPEN_BRACE           : 2 3 15 16 50
OPEN_PAREN           : 33 36 57 65 66 71
OPEN_SQUARE          : 
OR                   : 90
PIPE                 : 12 41 42
PLUS                 : 77
POW                  : 82
RIGHTASSOC           : 26
SETFIX               : 24
STRING               : 95
THEN                 : 
TIMES                : 79
TYPENAME             : 11 14 32 55 67 69
WHERE                : 1 38 40
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

AEXP                 : 52 53 58 59
ALT                  : 60 61
ALTS                 : 50 60
APAT                 : 34 36 47 64 67 75
APATS                : 34 36 47 67 75
ASSOCIATIVITY        : 24
ATYPE                : 28 29 30
ATYPES               : 14 30
BODY                 : 1
CONSTRUCTION_PARAMS  : 58
CONSTRUCTOR          : 12 13
CONSTRUCTORS         : 11 12
DECLARATION          : 10 17 18
DECLARATIONS         : 38 40 48
DECLARATIONS_LIST    : 15 17
EXP                  : 37 38 41 41 42 42 47 48 49 49 49 50 57 62
FEXP                 : 51 52
FIXITY_DECLARATION   : 22 0
FUNCTION_LHS         : 20 36
GDRHS                : 39 40 42
GEN_DECLARATION      : 19
IMPORT_DECLARATION   : 4 5
IMPORT_DECLARATIONS  : 2 4
INFIX_EXP            : 43 44 45
LEXP                 : 44 46
LITERAL              : 56 70
LPAT                 : 21 35 35 62 71
MODULE_DEFINITION    : 
NEW_CONS             : 9
OP                   : 24 44
PARAM                : 68
RHS                  : 20 21
TOP_DECLARATION      : 7 8
TOP_DECLARATIONS     : 2 3 7
TYPE                 : 29 33
USED_VAR             : 54
VAROP                : 35 74
VARSYM               : 72

Parsing method: LALR

state 0

    (0) S' -> . FIXITY_DECLARATION
    (24) FIXITY_DECLARATION -> . SETFIX ASSOCIATIVITY INTEGER OP

    SETFIX          shift and go to state 2

    FIXITY_DECLARATION             shift and go to state 1

state 1

    (0) S' -> FIXITY_DECLARATION .



state 2

    (24) FIXITY_DECLARATION -> SETFIX . ASSOCIATIVITY INTEGER OP
    (25) ASSOCIATIVITY -> . LEFTASSOC
    (26) ASSOCIATIVITY -> . RIGHTASSOC
    (27) ASSOCIATIVITY -> . NONASSOC

    LEFTASSOC       shift and go to state 4
    RIGHTASSOC      shift and go to state 5
    NONASSOC        shift and go to state 6

    ASSOCIATIVITY                  shift and go to state 3

state 3

    (24) FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY . INTEGER OP

    INTEGER         shift and go to state 7


state 4

    (25) ASSOCIATIVITY -> LEFTASSOC .

    INTEGER         reduce using rule 25 (ASSOCIATIVITY -> LEFTASSOC .)


state 5

    (26) ASSOCIATIVITY -> RIGHTASSOC .

    INTEGER         reduce using rule 26 (ASSOCIATIVITY -> RIGHTASSOC .)


state 6

    (27) ASSOCIATIVITY -> NONASSOC .

    INTEGER         reduce using rule 27 (ASSOCIATIVITY -> NONASSOC .)


state 7

    (24) FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER . OP
    (74) OP -> . VAROP
    (72) VAROP -> . VARSYM
    (73) VAROP -> . BACKTICK IDENTIFIER BACKTICK
    (77) VARSYM -> . PLUS
    (78) VARSYM -> . MINUS
    (79) VARSYM -> . TIMES
    (80) VARSYM -> . DIVIDE
    (81) VARSYM -> . MODULO
    (82) VARSYM -> . POW
    (83) VARSYM -> . EQUALITY
    (84) VARSYM -> . INEQUALITY
    (85) VARSYM -> . LESS
    (86) VARSYM -> . LEQ
    (87) VARSYM -> . GREATER
    (88) VARSYM -> . GEQ
    (89) VARSYM -> . AND
    (90) VARSYM -> . OR

    BACKTICK        shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15
    MODULO          shift and go to state 16
    POW             shift and go to state 17
    EQUALITY        shift and go to state 18
    INEQUALITY      shift and go to state 19
    LESS            shift and go to state 20
    LEQ             shift and go to state 21
    GREATER         shift and go to state 22
    GEQ             shift and go to state 23
    AND             shift and go to state 24
    OR              shift and go to state 25

    OP                             shift and go to state 8
    VAROP                          shift and go to state 9
    VARSYM                         shift and go to state 10

state 8

    (24) FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP .

    $end            reduce using rule 24 (FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP .)


state 9

    (74) OP -> VAROP .

    $end            reduce using rule 74 (OP -> VAROP .)


state 10

    (72) VAROP -> VARSYM .

    $end            reduce using rule 72 (VAROP -> VARSYM .)


state 11

    (73) VAROP -> BACKTICK . IDENTIFIER BACKTICK

    IDENTIFIER      shift and go to state 26


state 12

    (77) VARSYM -> PLUS .

    $end            reduce using rule 77 (VARSYM -> PLUS .)


state 13

    (78) VARSYM -> MINUS .

    $end            reduce using rule 78 (VARSYM -> MINUS .)


state 14

    (79) VARSYM -> TIMES .

    $end            reduce using rule 79 (VARSYM -> TIMES .)


state 15

    (80) VARSYM -> DIVIDE .

    $end            reduce using rule 80 (VARSYM -> DIVIDE .)


state 16

    (81) VARSYM -> MODULO .

    $end            reduce using rule 81 (VARSYM -> MODULO .)


state 17

    (82) VARSYM -> POW .

    $end            reduce using rule 82 (VARSYM -> POW .)


state 18

    (83) VARSYM -> EQUALITY .

    $end            reduce using rule 83 (VARSYM -> EQUALITY .)


state 19

    (84) VARSYM -> INEQUALITY .

    $end            reduce using rule 84 (VARSYM -> INEQUALITY .)


state 20

    (85) VARSYM -> LESS .

    $end            reduce using rule 85 (VARSYM -> LESS .)


state 21

    (86) VARSYM -> LEQ .

    $end            reduce using rule 86 (VARSYM -> LEQ .)


state 22

    (87) VARSYM -> GREATER .

    $end            reduce using rule 87 (VARSYM -> GREATER .)


state 23

    (88) VARSYM -> GEQ .

    $end            reduce using rule 88 (VARSYM -> GEQ .)


state 24

    (89) VARSYM -> AND .

    $end            reduce using rule 89 (VARSYM -> AND .)


state 25

    (90) VARSYM -> OR .

    $end            reduce using rule 90 (VARSYM -> OR .)


state 26

    (73) VAROP -> BACKTICK IDENTIFIER . BACKTICK

    BACKTICK        shift and go to state 27


state 27

    (73) VAROP -> BACKTICK IDENTIFIER BACKTICK .

    $end            reduce using rule 73 (VAROP -> BACKTICK IDENTIFIER BACKTICK .)

