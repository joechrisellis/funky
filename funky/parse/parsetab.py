
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MODULE_DEFINITIONAND ARROW BACKTICK BOOL CHAR CLOSE_BRACE CLOSE_PAREN DIVIDE ELSE ENDSTATEMENT EQUALITY EQUALS FLOAT GEQ GIVEN GREATER IDENTIFIER IF IMPORT IN INEQUALITY INTEGER LAMBDA LEFTASSOC LEQ LESS LET MATCH MINUS MODULE MODULO NEWTYPE NONASSOC OF OPEN_BRACE OPEN_PAREN OR PIPE PLUS POW RIGHTASSOC SETFIX STRING TIMES TYPENAME WHERE WHITESPACEMODULE_DEFINITION : MODULE IDENTIFIER WHERE BODY\n        BODY : OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE\n                | OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE\n        IMPORT_DECLARATIONS : IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION\n                               | IMPORT_DECLARATION\n        IMPORT_DECLARATION : IMPORT IDENTIFIER\n        TOP_DECLARATIONS : TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION\n                            | TOP_DECLARATION\n        TOP_DECLARATION : TYPE_DECLARATION\n                           | DECLARATION\n        TYPE_DECLARATION : NEWTYPE TYPENAME TYVARS EQUALS CONSTRUCTORSTYVARS : TYVARS IDENTIFIER\n                  |\n        CONSTRUCTORS : CONSTRUCTORS PIPE CONSTRUCTOR\n                        | CONSTRUCTOR\n        CONSTRUCTOR : TYPENAME ATYPESDECLARATIONS : OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE\n                        | OPEN_BRACE CLOSE_BRACE\n        DECLARATIONS_LIST : DECLARATION ENDSTATEMENT DECLARATIONS_LIST\n                             | DECLARATION\n        DECLARATION : GEN_DECLARATION\n                       | FUNCTION_LHS RHS\n                       | LPAT RHS\n        GEN_DECLARATION : FIXITY_DECLARATION\n                           |\n        FIXITY_DECLARATION : SETFIX ASSOCIATIVITY INTEGER OPASSOCIATIVITY : LEFTASSOC\n                         | RIGHTASSOC\n                         | NONASSOC\n        TYPE : ATYPE\n                | ATYPE ARROW TYPE\n        ATYPES : ATYPES ATYPE\n                  |\n        ATYPE : TYPENAME\n                 | IDENTIFIER\n                 | OPEN_PAREN TYPE CLOSE_PAREN\n        FUNCTION_LHS : IDENTIFIER APAT APATS\n                        | LPAT VAROP LPAT\n                        | OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS\n        RHS : EQUALS EXP\n               | EQUALS EXP WHERE DECLARATIONS\n               | GDRHS\n               | GDRHS WHERE DECLARATIONS\n        GDRHS : GIVEN EXP EQUALS EXP\n                 | GIVEN EXP EQUALS EXP GDRHS\n        EXP : INFIX_EXP\n        INFIX_EXP : LEXP OP INFIX_EXP\n                     | MINUS INFIX_EXP\n                     | LEXP\n        LEXP : LAMBDA APAT APATS ARROW EXP\n                | LET DECLARATIONS IN EXP\n                | EXP IF EXP ELSE EXP\n                | MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE\n                | FEXP\n        FEXP : FEXP AEXP\n                | AEXP\n        AEXP : USED_VAR\n                | TYPENAME\n                | LITERAL\n                | OPEN_PAREN EXP CLOSE_PAREN\n        CONSTRUCTION_PARAMS : CONSTRUCTION_PARAMS AEXP\n                               | AEXP\n        ALTS : ALT ENDSTATEMENT ALTS\n                | ALT\n        ALT : LPAT ARROW EXP\n               |\n        LPAT : APAT\n                | MINUS OPEN_PAREN INTEGER CLOSE_PAREN\n                | MINUS OPEN_PAREN FLOAT CLOSE_PAREN\n                | TYPENAME APAT APATS\n        APAT : PARAM\n                | TYPENAME\n                | LITERAL\n                | OPEN_PAREN LPAT CLOSE_PAREN\n        VAROP : VARSYM\n                 | BACKTICK IDENTIFIER BACKTICK\n        OP : VAROP\n        APATS : APAT APATS\n                 |\n        VARSYM : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | MODULO\n                  | POW\n                  | EQUALITY\n                  | INEQUALITY\n                  | LESS\n                  | LEQ\n                  | GREATER\n                  | GEQ\n                  | AND\n                  | OR\n        LITERAL : FLOAT\n                   | INTEGER\n                   | BOOL\n                   | CHAR\n                   | STRING\n        USED_VAR : IDENTIFIERPARAM : IDENTIFIER'
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end':([1,5,33,102,],[0,-1,-3,-2,]),'IDENTIFIER':([2,6,11,12,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,74,77,82,83,85,86,87,88,89,90,91,92,97,98,105,107,108,109,112,114,116,119,120,121,125,132,137,140,142,143,146,147,149,150,151,152,163,164,165,166,],[3,12,35,36,36,12,-95,-94,-71,-73,-96,-97,-98,12,12,-100,36,-72,36,-13,36,92,92,36,-75,96,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,36,105,92,36,92,92,-56,-57,-58,-59,92,-99,36,-74,-12,92,92,-77,36,12,-55,92,-76,36,-33,92,-60,151,92,92,12,36,-34,-32,-35,151,36,92,-36,151,]),'WHERE':([3,24,25,29,30,31,44,79,80,81,86,87,88,89,90,92,110,116,130,137,138,144,148,154,155,162,],[4,-95,-94,-96,-97,-98,93,106,-46,-49,-54,-56,-57,-58,-59,-99,-48,-55,-47,-60,-44,-51,-45,-52,-50,-53,]),'OPEN_BRACE':([4,84,93,106,136,],[6,114,114,114,147,]),'IMPORT':([6,32,],[11,11,]),'NEWTYPE':([6,32,34,],[15,15,15,]),'CLOSE_BRACE':([6,8,10,13,14,17,20,24,25,29,30,31,32,34,42,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,71,73,79,80,81,86,87,88,89,90,92,109,110,114,116,118,120,124,125,126,127,128,130,133,134,135,137,138,140,144,145,146,147,148,149,150,151,153,154,155,156,157,158,162,163,165,167,168,],[-25,33,-8,-9,-10,-21,-24,-95,-94,-96,-97,-98,-25,-25,-22,-42,-23,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,102,-7,-40,-46,-49,-54,-56,-57,-58,-59,-99,-77,-48,134,-55,-43,-76,-26,-33,-11,-15,-41,-47,145,-18,-20,-60,-44,-16,-51,-17,-25,-66,-45,-34,-32,-35,-14,-52,-50,-19,162,-64,-53,-66,-36,-63,-65,]),'ENDSTATEMENT':([6,7,8,9,10,13,14,17,20,24,25,29,30,31,32,34,35,42,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,71,72,73,79,80,81,86,87,88,89,90,92,109,110,114,116,118,120,124,125,126,127,128,130,134,135,137,138,140,144,145,146,147,148,149,150,151,153,154,155,158,162,163,165,168,],[-25,32,34,-5,-8,-9,-10,-21,-24,-95,-94,-96,-97,-98,-25,-25,-6,-22,-42,-23,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,34,-4,-7,-40,-46,-49,-54,-56,-57,-58,-59,-99,-77,-48,-25,-55,-43,-76,-26,-33,-11,-15,-41,-47,-18,146,-60,-44,-16,-51,-17,-25,-66,-45,-34,-32,-35,-14,-52,-50,163,-53,-66,-36,-65,]),'OPEN_PAREN':([6,12,16,22,23,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,74,82,83,85,86,87,88,89,90,91,92,97,98,107,108,109,112,114,116,119,120,121,125,132,137,140,142,143,146,147,149,150,151,152,163,164,165,166,],[22,39,39,22,66,-95,-94,-71,-73,-96,-97,-98,22,22,-100,39,-72,39,39,91,91,39,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,39,91,39,91,91,-56,-57,-58,-59,91,-99,39,-74,91,91,-77,39,22,-55,91,-76,39,-33,91,-60,152,91,91,22,39,-34,-32,-35,152,39,91,-36,152,]),'MINUS':([6,12,16,19,21,22,24,25,27,28,29,30,31,32,34,36,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,74,78,80,81,82,85,86,87,88,89,90,91,92,98,101,103,107,108,109,110,114,116,119,120,122,123,130,132,137,142,143,144,146,147,154,155,162,163,164,],[23,-100,-72,51,-67,23,-95,-94,-71,-73,-96,-97,-98,23,23,-100,-72,23,-79,82,82,23,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,51,-79,-70,-46,51,82,82,-54,-56,-57,-58,-59,82,-99,-74,51,-78,82,82,-77,-48,23,-55,82,-76,-68,-69,-47,82,-60,82,82,-51,23,23,-52,-50,-53,23,82,]),'TYPENAME':([6,12,15,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,74,82,83,85,86,87,88,89,90,91,92,97,98,104,107,108,109,112,114,116,119,120,121,125,132,137,140,141,142,143,146,147,149,150,151,152,163,164,165,166,],[16,38,40,38,16,-95,-94,-71,-73,-96,-97,-98,16,16,-100,38,-72,16,38,89,89,16,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,38,89,38,89,89,-56,-57,-58,-59,89,-99,38,-74,125,89,89,-77,38,16,-55,89,-76,38,-33,89,-60,149,125,89,89,16,16,-34,-32,-35,149,16,89,-36,149,]),'SETFIX':([6,32,34,114,146,],[26,26,26,26,26,]),'FLOAT':([6,12,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,74,82,83,85,86,87,88,89,90,91,92,97,98,107,108,109,112,114,116,119,120,121,132,137,142,143,146,147,163,164,],[25,25,25,25,-95,-94,-71,-73,-96,-97,-98,25,25,-100,25,-72,25,25,25,25,25,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,100,25,25,25,25,25,-56,-57,-58,-59,25,-99,25,-74,25,25,-77,25,25,-55,25,-76,25,25,-60,25,25,25,25,25,25,]),'INTEGER':([6,12,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,74,82,83,85,86,87,88,89,90,91,92,97,98,107,108,109,112,114,116,119,120,121,132,137,142,143,146,147,163,164,],[24,24,24,24,-95,-94,-71,-73,-96,-97,-98,24,24,-100,24,-72,24,24,24,24,24,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,99,101,-27,-28,-29,24,24,24,24,24,-56,-57,-58,-59,24,-99,24,-74,24,24,-77,24,24,-55,24,-76,24,24,-60,24,24,24,24,24,24,]),'BOOL':([6,12,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,74,82,83,85,86,87,88,89,90,91,92,97,98,107,108,109,112,114,116,119,120,121,132,137,142,143,146,147,163,164,],[29,29,29,29,-95,-94,-71,-73,-96,-97,-98,29,29,-100,29,-72,29,29,29,29,29,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,29,29,29,29,29,-56,-57,-58,-59,29,-99,29,-74,29,29,-77,29,29,-55,29,-76,29,29,-60,29,29,29,29,29,29,]),'CHAR':([6,12,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,74,82,83,85,86,87,88,89,90,91,92,97,98,107,108,109,112,114,116,119,120,121,132,137,142,143,146,147,163,164,],[30,30,30,30,-95,-94,-71,-73,-96,-97,-98,30,30,-100,30,-72,30,30,30,30,30,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,30,30,30,30,30,-56,-57,-58,-59,30,-99,30,-74,30,30,-77,30,30,-55,30,-76,30,30,-60,30,30,30,30,30,30,]),'STRING':([6,12,16,22,24,25,27,28,29,30,31,32,34,36,37,38,39,41,43,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,74,82,83,85,86,87,88,89,90,91,92,97,98,107,108,109,112,114,116,119,120,121,132,137,142,143,146,147,163,164,],[31,31,31,31,-95,-94,-71,-73,-96,-97,-98,31,31,-100,31,-72,31,31,31,31,31,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,31,31,31,31,31,-56,-57,-58,-59,31,-99,31,-74,31,31,-77,31,31,-55,31,-76,31,31,-60,31,31,31,31,31,31,]),'EQUALS':([12,16,18,19,21,24,25,27,28,29,30,31,36,37,38,40,41,74,75,77,78,80,81,86,87,88,89,90,92,94,95,98,103,105,110,116,121,122,123,130,137,139,144,154,155,162,],[-100,-72,43,43,-67,-95,-94,-71,-73,-96,-97,-98,-100,-79,-72,-13,-79,-79,-37,104,-70,-46,-49,-54,-56,-57,-58,-59,-99,119,-38,-74,-78,-12,-48,-55,-79,-68,-69,-47,-60,-39,-51,-52,-50,-53,]),'BACKTICK':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,96,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,49,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,49,-79,-70,-46,49,-54,-56,-57,-58,-59,-99,120,-74,49,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'GIVEN':([12,16,18,19,21,24,25,27,28,29,30,31,36,37,38,41,74,75,78,80,81,86,87,88,89,90,92,95,98,103,110,116,121,122,123,130,137,138,139,144,154,155,162,],[-100,-72,45,45,-67,-95,-94,-71,-73,-96,-97,-98,-100,-79,-72,-79,-79,-37,-70,-46,-49,-54,-56,-57,-58,-59,-99,-38,-74,-78,-48,-55,-79,-68,-69,-47,-60,45,-39,-51,-52,-50,-53,]),'PLUS':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,50,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,50,-79,-70,-46,50,-54,-56,-57,-58,-59,-99,-74,50,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'TIMES':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,52,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,52,-79,-70,-46,52,-54,-56,-57,-58,-59,-99,-74,52,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'DIVIDE':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,53,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,53,-79,-70,-46,53,-54,-56,-57,-58,-59,-99,-74,53,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'MODULO':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,54,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,54,-79,-70,-46,54,-54,-56,-57,-58,-59,-99,-74,54,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'POW':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,55,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,55,-79,-70,-46,55,-54,-56,-57,-58,-59,-99,-74,55,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'EQUALITY':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,56,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,56,-79,-70,-46,56,-54,-56,-57,-58,-59,-99,-74,56,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'INEQUALITY':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,57,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,57,-79,-70,-46,57,-54,-56,-57,-58,-59,-99,-74,57,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'LESS':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,58,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,58,-79,-70,-46,58,-54,-56,-57,-58,-59,-99,-74,58,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'LEQ':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,59,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,59,-79,-70,-46,59,-54,-56,-57,-58,-59,-99,-74,59,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'GREATER':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,60,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,60,-79,-70,-46,60,-54,-56,-57,-58,-59,-99,-74,60,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'GEQ':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,61,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,61,-79,-70,-46,61,-54,-56,-57,-58,-59,-99,-74,61,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'AND':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,62,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,62,-79,-70,-46,62,-54,-56,-57,-58,-59,-99,-74,62,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'OR':([12,16,19,21,24,25,27,28,29,30,31,36,38,41,65,74,78,80,81,86,87,88,89,90,92,98,101,103,110,116,122,123,130,137,144,154,155,162,],[-100,-72,63,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,63,-79,-70,-46,63,-54,-56,-57,-58,-59,-99,-74,63,-78,-48,-55,-68,-69,-47,-60,-51,-52,-50,-53,]),'CLOSE_PAREN':([12,16,21,24,25,27,28,29,30,31,36,37,38,41,64,65,74,75,76,78,80,81,86,87,88,89,90,92,95,98,99,100,103,110,116,117,121,122,123,130,137,139,144,149,151,154,155,160,161,162,165,169,],[-100,-72,-67,-95,-94,-71,-73,-96,-97,-98,-100,-79,-72,-79,97,98,-79,-37,98,-70,-46,-49,-54,-56,-57,-58,-59,-99,-38,-74,122,123,-78,-48,-55,137,-79,-68,-69,-47,-60,-39,-51,-34,-35,-52,-50,165,-30,-53,-36,-31,]),'ARROW':([16,21,24,25,27,28,29,30,31,36,38,41,74,78,98,103,112,122,123,131,149,151,159,161,165,],[-72,-67,-95,-94,-71,-73,-96,-97,-98,-100,-72,-79,-79,-70,-74,-78,-79,-68,-69,143,-34,-35,164,166,-36,]),'IF':([24,25,29,30,31,79,80,81,86,87,88,89,90,92,94,110,111,115,116,117,129,130,137,138,144,154,155,162,168,],[-95,-94,-96,-97,-98,107,-46,-49,-54,-56,-57,-58,-59,-99,107,-46,107,107,-55,107,107,-46,-60,107,107,107,107,-53,107,]),'OF':([24,25,29,30,31,80,81,86,87,88,89,90,92,110,115,116,130,137,144,154,155,162,],[-95,-94,-96,-97,-98,-46,-49,-54,-56,-57,-58,-59,-99,-48,136,-55,-47,-60,-51,-52,-50,-53,]),'ELSE':([24,25,29,30,31,80,81,86,87,88,89,90,92,110,116,129,130,137,144,154,155,162,],[-95,-94,-96,-97,-98,-46,-49,-54,-56,-57,-58,-59,-99,-48,-55,142,-47,-60,-51,-52,-50,-53,]),'LEFTASSOC':([26,],[68,]),'RIGHTASSOC':([26,],[69,]),'NONASSOC':([26,],[70,]),'LAMBDA':([43,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,82,85,91,107,108,109,119,120,132,142,143,164,],[83,83,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,83,83,83,83,83,-77,83,-76,83,83,83,83,]),'LET':([43,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,82,85,91,107,108,109,119,120,132,142,143,164,],[84,84,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,84,84,84,84,84,-77,84,-76,84,84,84,84,]),'MATCH':([43,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,82,85,91,107,108,109,119,120,132,142,143,164,],[85,85,-75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,85,85,85,85,85,-77,85,-76,85,85,85,85,]),'IN':([113,134,145,],[132,-18,-17,]),'PIPE':([125,126,127,140,149,150,151,153,165,],[-33,141,-15,-16,-34,-32,-35,-14,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MODULE_DEFINITION':([0,],[1,]),'BODY':([4,],[5,]),'IMPORT_DECLARATIONS':([6,],[7,]),'TOP_DECLARATIONS':([6,32,],[8,71,]),'IMPORT_DECLARATION':([6,32,],[9,72,]),'TOP_DECLARATION':([6,32,34,],[10,10,73,]),'TYPE_DECLARATION':([6,32,34,],[13,13,13,]),'DECLARATION':([6,32,34,114,146,],[14,14,14,135,135,]),'GEN_DECLARATION':([6,32,34,114,146,],[17,17,17,17,17,]),'FUNCTION_LHS':([6,22,32,34,114,146,],[18,64,18,18,18,18,]),'LPAT':([6,22,32,34,39,47,114,146,147,163,],[19,65,19,19,76,95,19,19,159,159,]),'FIXITY_DECLARATION':([6,32,34,114,146,],[20,20,20,20,20,]),'APAT':([6,12,16,22,32,34,37,39,41,47,74,83,97,112,114,121,146,147,163,],[21,37,41,21,21,21,74,21,74,21,74,112,121,74,21,74,21,21,21,]),'PARAM':([6,12,16,22,32,34,37,39,41,47,74,83,97,112,114,121,146,147,163,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LITERAL':([6,12,16,22,32,34,37,39,41,43,45,47,74,82,83,85,86,91,97,107,108,112,114,119,121,132,142,143,146,147,163,164,],[28,28,28,28,28,28,28,28,28,90,90,28,28,90,28,90,90,90,28,90,90,28,28,90,28,90,90,90,28,28,28,90,]),'RHS':([18,19,],[42,46,]),'GDRHS':([18,19,138,],[44,44,148,]),'VAROP':([19,65,81,101,],[47,47,109,109,]),'VARSYM':([19,65,81,101,],[48,48,48,48,]),'ASSOCIATIVITY':([26,],[67,]),'APATS':([37,41,74,112,121,],[75,78,103,131,139,]),'TYVARS':([40,],[77,]),'EXP':([43,45,82,85,91,107,108,119,132,142,143,164,],[79,94,111,115,117,129,111,138,144,154,155,168,]),'INFIX_EXP':([43,45,82,85,91,107,108,119,132,142,143,164,],[80,80,110,80,80,80,130,80,80,80,80,80,]),'LEXP':([43,45,82,85,91,107,108,119,132,142,143,164,],[81,81,81,81,81,81,81,81,81,81,81,81,]),'FEXP':([43,45,82,85,91,107,108,119,132,142,143,164,],[86,86,86,86,86,86,86,86,86,86,86,86,]),'AEXP':([43,45,82,85,86,91,107,108,119,132,142,143,164,],[87,87,87,87,116,87,87,87,87,87,87,87,87,]),'USED_VAR':([43,45,82,85,86,91,107,108,119,132,142,143,164,],[88,88,88,88,88,88,88,88,88,88,88,88,88,]),'OP':([81,101,],[108,124,]),'DECLARATIONS':([84,93,106,],[113,118,128,]),'CONSTRUCTORS':([104,],[126,]),'CONSTRUCTOR':([104,141,],[127,153,]),'DECLARATIONS_LIST':([114,146,],[133,156,]),'ATYPES':([125,],[140,]),'ATYPE':([140,152,166,],[150,161,161,]),'ALTS':([147,163,],[157,167,]),'ALT':([147,163,],[158,158,]),'TYPE':([152,166,],[160,169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MODULE_DEFINITION","S'",1,None,None,None),
  ('MODULE_DEFINITION -> MODULE IDENTIFIER WHERE BODY','MODULE_DEFINITION',4,'p_MODULE_DEFINITION','funky_parser.py',20),
  ('BODY -> OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE','BODY',5,'p_BODY','funky_parser.py',26),
  ('BODY -> OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE','BODY',3,'p_BODY','funky_parser.py',27),
  ('IMPORT_DECLARATIONS -> IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION','IMPORT_DECLARATIONS',3,'p_IMPORT_DECLARATIONS','funky_parser.py',39),
  ('IMPORT_DECLARATIONS -> IMPORT_DECLARATION','IMPORT_DECLARATIONS',1,'p_IMPORT_DECLARATIONS','funky_parser.py',40),
  ('IMPORT_DECLARATION -> IMPORT IDENTIFIER','IMPORT_DECLARATION',2,'p_IMPORT_DECLARATION','funky_parser.py',48),
  ('TOP_DECLARATIONS -> TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION','TOP_DECLARATIONS',3,'p_TOP_DECLARATIONS','funky_parser.py',53),
  ('TOP_DECLARATIONS -> TOP_DECLARATION','TOP_DECLARATIONS',1,'p_TOP_DECLARATIONS','funky_parser.py',54),
  ('TOP_DECLARATION -> TYPE_DECLARATION','TOP_DECLARATION',1,'p_TOP_DECLARATION','funky_parser.py',62),
  ('TOP_DECLARATION -> DECLARATION','TOP_DECLARATION',1,'p_TOP_DECLARATION','funky_parser.py',63),
  ('TYPE_DECLARATION -> NEWTYPE TYPENAME TYVARS EQUALS CONSTRUCTORS','TYPE_DECLARATION',5,'p_TYPE_DECLARATION','funky_parser.py',68),
  ('TYVARS -> TYVARS IDENTIFIER','TYVARS',2,'p_TYVARS','funky_parser.py',72),
  ('TYVARS -> <empty>','TYVARS',0,'p_TYVARS','funky_parser.py',73),
  ('CONSTRUCTORS -> CONSTRUCTORS PIPE CONSTRUCTOR','CONSTRUCTORS',3,'p_CONSTRUCTORS','funky_parser.py',81),
  ('CONSTRUCTORS -> CONSTRUCTOR','CONSTRUCTORS',1,'p_CONSTRUCTORS','funky_parser.py',82),
  ('CONSTRUCTOR -> TYPENAME ATYPES','CONSTRUCTOR',2,'p_CONSTRUCTOR','funky_parser.py',90),
  ('DECLARATIONS -> OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE','DECLARATIONS',3,'p_DECLARATIONS','funky_parser.py',94),
  ('DECLARATIONS -> OPEN_BRACE CLOSE_BRACE','DECLARATIONS',2,'p_DECLARATIONS','funky_parser.py',95),
  ('DECLARATIONS_LIST -> DECLARATION ENDSTATEMENT DECLARATIONS_LIST','DECLARATIONS_LIST',3,'p_DECLARATIONS_LIST','funky_parser.py',103),
  ('DECLARATIONS_LIST -> DECLARATION','DECLARATIONS_LIST',1,'p_DECLARATIONS_LIST','funky_parser.py',104),
  ('DECLARATION -> GEN_DECLARATION','DECLARATION',1,'p_DECLARATION','funky_parser.py',112),
  ('DECLARATION -> FUNCTION_LHS RHS','DECLARATION',2,'p_DECLARATION','funky_parser.py',113),
  ('DECLARATION -> LPAT RHS','DECLARATION',2,'p_DECLARATION','funky_parser.py',114),
  ('GEN_DECLARATION -> FIXITY_DECLARATION','GEN_DECLARATION',1,'p_GEN_DECLARATION','funky_parser.py',124),
  ('GEN_DECLARATION -> <empty>','GEN_DECLARATION',0,'p_GEN_DECLARATION','funky_parser.py',125),
  ('FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP','FIXITY_DECLARATION',4,'p_FIXITY_DECLARATION','funky_parser.py',131),
  ('ASSOCIATIVITY -> LEFTASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',135),
  ('ASSOCIATIVITY -> RIGHTASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',136),
  ('ASSOCIATIVITY -> NONASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',137),
  ('TYPE -> ATYPE','TYPE',1,'p_TYPE','funky_parser.py',142),
  ('TYPE -> ATYPE ARROW TYPE','TYPE',3,'p_TYPE','funky_parser.py',143),
  ('ATYPES -> ATYPES ATYPE','ATYPES',2,'p_ATYPES','funky_parser.py',151),
  ('ATYPES -> <empty>','ATYPES',0,'p_ATYPES','funky_parser.py',152),
  ('ATYPE -> TYPENAME','ATYPE',1,'p_ATYPE','funky_parser.py',160),
  ('ATYPE -> IDENTIFIER','ATYPE',1,'p_ATYPE','funky_parser.py',161),
  ('ATYPE -> OPEN_PAREN TYPE CLOSE_PAREN','ATYPE',3,'p_ATYPE','funky_parser.py',162),
  ('FUNCTION_LHS -> IDENTIFIER APAT APATS','FUNCTION_LHS',3,'p_FUNCTION_LHS','funky_parser.py',170),
  ('FUNCTION_LHS -> LPAT VAROP LPAT','FUNCTION_LHS',3,'p_FUNCTION_LHS','funky_parser.py',171),
  ('FUNCTION_LHS -> OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS','FUNCTION_LHS',5,'p_FUNCTION_LHS','funky_parser.py',172),
  ('RHS -> EQUALS EXP','RHS',2,'p_RHS','funky_parser.py',184),
  ('RHS -> EQUALS EXP WHERE DECLARATIONS','RHS',4,'p_RHS','funky_parser.py',185),
  ('RHS -> GDRHS','RHS',1,'p_RHS','funky_parser.py',186),
  ('RHS -> GDRHS WHERE DECLARATIONS','RHS',3,'p_RHS','funky_parser.py',187),
  ('GDRHS -> GIVEN EXP EQUALS EXP','GDRHS',4,'p_GDRHS','funky_parser.py',200),
  ('GDRHS -> GIVEN EXP EQUALS EXP GDRHS','GDRHS',5,'p_GDRHS','funky_parser.py',201),
  ('EXP -> INFIX_EXP','EXP',1,'p_EXP','funky_parser.py',209),
  ('INFIX_EXP -> LEXP OP INFIX_EXP','INFIX_EXP',3,'p_INFIX_EXP','funky_parser.py',215),
  ('INFIX_EXP -> MINUS INFIX_EXP','INFIX_EXP',2,'p_INFIX_EXP','funky_parser.py',216),
  ('INFIX_EXP -> LEXP','INFIX_EXP',1,'p_INFIX_EXP','funky_parser.py',217),
  ('LEXP -> LAMBDA APAT APATS ARROW EXP','LEXP',5,'p_LEXP','funky_parser.py',235),
  ('LEXP -> LET DECLARATIONS IN EXP','LEXP',4,'p_LEXP','funky_parser.py',236),
  ('LEXP -> EXP IF EXP ELSE EXP','LEXP',5,'p_LEXP','funky_parser.py',237),
  ('LEXP -> MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE','LEXP',6,'p_LEXP','funky_parser.py',238),
  ('LEXP -> FEXP','LEXP',1,'p_LEXP','funky_parser.py',239),
  ('FEXP -> FEXP AEXP','FEXP',2,'p_FEXP','funky_parser.py',255),
  ('FEXP -> AEXP','FEXP',1,'p_FEXP','funky_parser.py',256),
  ('AEXP -> USED_VAR','AEXP',1,'p_AEXP','funky_parser.py',264),
  ('AEXP -> TYPENAME','AEXP',1,'p_AEXP','funky_parser.py',265),
  ('AEXP -> LITERAL','AEXP',1,'p_AEXP','funky_parser.py',266),
  ('AEXP -> OPEN_PAREN EXP CLOSE_PAREN','AEXP',3,'p_AEXP','funky_parser.py',267),
  ('CONSTRUCTION_PARAMS -> CONSTRUCTION_PARAMS AEXP','CONSTRUCTION_PARAMS',2,'p_CONSTRUCTION_PARAMS','funky_parser.py',278),
  ('CONSTRUCTION_PARAMS -> AEXP','CONSTRUCTION_PARAMS',1,'p_CONSTRUCTION_PARAMS','funky_parser.py',279),
  ('ALTS -> ALT ENDSTATEMENT ALTS','ALTS',3,'p_ALTS','funky_parser.py',287),
  ('ALTS -> ALT','ALTS',1,'p_ALTS','funky_parser.py',288),
  ('ALT -> LPAT ARROW EXP','ALT',3,'p_ALT','funky_parser.py',296),
  ('ALT -> <empty>','ALT',0,'p_ALT','funky_parser.py',297),
  ('LPAT -> APAT','LPAT',1,'p_LPAT','funky_parser.py',302),
  ('LPAT -> MINUS OPEN_PAREN INTEGER CLOSE_PAREN','LPAT',4,'p_LPAT','funky_parser.py',303),
  ('LPAT -> MINUS OPEN_PAREN FLOAT CLOSE_PAREN','LPAT',4,'p_LPAT','funky_parser.py',304),
  ('LPAT -> TYPENAME APAT APATS','LPAT',3,'p_LPAT','funky_parser.py',305),
  ('APAT -> PARAM','APAT',1,'p_APAT','funky_parser.py',315),
  ('APAT -> TYPENAME','APAT',1,'p_APAT','funky_parser.py',316),
  ('APAT -> LITERAL','APAT',1,'p_APAT','funky_parser.py',317),
  ('APAT -> OPEN_PAREN LPAT CLOSE_PAREN','APAT',3,'p_APAT','funky_parser.py',318),
  ('VAROP -> VARSYM','VAROP',1,'p_VAROP','funky_parser.py',329),
  ('VAROP -> BACKTICK IDENTIFIER BACKTICK','VAROP',3,'p_VAROP','funky_parser.py',330),
  ('OP -> VAROP','OP',1,'p_OP','funky_parser.py',340),
  ('APATS -> APAT APATS','APATS',2,'p_APATS','funky_parser.py',345),
  ('APATS -> <empty>','APATS',0,'p_APATS','funky_parser.py',346),
  ('VARSYM -> PLUS','VARSYM',1,'p_VARSYM','funky_parser.py',354),
  ('VARSYM -> MINUS','VARSYM',1,'p_VARSYM','funky_parser.py',355),
  ('VARSYM -> TIMES','VARSYM',1,'p_VARSYM','funky_parser.py',356),
  ('VARSYM -> DIVIDE','VARSYM',1,'p_VARSYM','funky_parser.py',357),
  ('VARSYM -> MODULO','VARSYM',1,'p_VARSYM','funky_parser.py',358),
  ('VARSYM -> POW','VARSYM',1,'p_VARSYM','funky_parser.py',359),
  ('VARSYM -> EQUALITY','VARSYM',1,'p_VARSYM','funky_parser.py',360),
  ('VARSYM -> INEQUALITY','VARSYM',1,'p_VARSYM','funky_parser.py',361),
  ('VARSYM -> LESS','VARSYM',1,'p_VARSYM','funky_parser.py',362),
  ('VARSYM -> LEQ','VARSYM',1,'p_VARSYM','funky_parser.py',363),
  ('VARSYM -> GREATER','VARSYM',1,'p_VARSYM','funky_parser.py',364),
  ('VARSYM -> GEQ','VARSYM',1,'p_VARSYM','funky_parser.py',365),
  ('VARSYM -> AND','VARSYM',1,'p_VARSYM','funky_parser.py',366),
  ('VARSYM -> OR','VARSYM',1,'p_VARSYM','funky_parser.py',367),
  ('LITERAL -> FLOAT','LITERAL',1,'p_LITERAL','funky_parser.py',372),
  ('LITERAL -> INTEGER','LITERAL',1,'p_LITERAL','funky_parser.py',373),
  ('LITERAL -> BOOL','LITERAL',1,'p_LITERAL','funky_parser.py',374),
  ('LITERAL -> CHAR','LITERAL',1,'p_LITERAL','funky_parser.py',375),
  ('LITERAL -> STRING','LITERAL',1,'p_LITERAL','funky_parser.py',376),
  ('USED_VAR -> IDENTIFIER','USED_VAR',1,'p_USED_VAR','funky_parser.py',381),
  ('PARAM -> IDENTIFIER','PARAM',1,'p_PARAM','funky_parser.py',385),
]
