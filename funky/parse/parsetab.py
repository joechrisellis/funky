
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'MODULE_DEFINITIONAND ARROW BACKTICK BOOL CHAR CLOSE_BRACE CLOSE_PAREN DIVIDE ELSE ENDSTATEMENT EQUALITY EQUALS FLOAT GEQ GIVEN GREATER IDENTIFIER IF IMPORT IN INEQUALITY INTEGER LAMBDA LEFTASSOC LEQ LESS LET MATCH MINUS MODULE MODULO NEWTYPE NONASSOC OF OPEN_BRACE OPEN_PAREN OR PIPE PLUS POW RIGHTASSOC SETFIX STRING TIMES TYPENAME WHERE WHITESPACEMODULE_DEFINITION : MODULE IDENTIFIER WHERE BODY\n        BODY : OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE\n                | OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE\n        IMPORT_DECLARATIONS : IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION\n                               | IMPORT_DECLARATION\n        IMPORT_DECLARATION : IMPORT IDENTIFIER\n        TOP_DECLARATIONS : TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION\n                            | TOP_DECLARATION\n        TOP_DECLARATION : TYPE_DECLARATION\n                           | DECLARATION\n        TYPE_DECLARATION : NEWTYPE TYPENAME TYVARS EQUALS CONSTRUCTORSTYVARS : TYVARS IDENTIFIER\n                  |\n        CONSTRUCTORS : CONSTRUCTORS PIPE CONSTRUCTOR\n                        | CONSTRUCTOR\n        CONSTRUCTOR : TYPENAME ATYPESDECLARATIONS : OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE\n                        | OPEN_BRACE CLOSE_BRACE\n        DECLARATIONS_LIST : DECLARATION ENDSTATEMENT DECLARATIONS_LIST\n                             | DECLARATION\n        DECLARATION : GEN_DECLARATION\n                       | FUNCTION_DEFINITION\n                       | VARIABLE_DEFINITION\n        FUNCTION_DEFINITION : FUNCTION_LHS RHSVARIABLE_DEFINITION : PARAM RHSGEN_DECLARATION : FIXITY_DECLARATION\n                           |\n        FIXITY_DECLARATION : SETFIX ASSOCIATIVITY INTEGER OPASSOCIATIVITY : LEFTASSOC\n                         | RIGHTASSOC\n                         | NONASSOC\n        TYPE : ATYPE\n                | ATYPE ARROW TYPE\n        ATYPES : ATYPES ATYPE\n                  |\n        ATYPE : TYPENAME\n                 | IDENTIFIER\n                 | OPEN_PAREN TYPE CLOSE_PAREN\n        FUNCTION_LHS : IDENTIFIER APAT APATS\n                        | OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS\n                        | INFIX_FUNCTION_DEFINITION\n        INFIX_FUNCTION_DEFINITION : LPAT INFIX_FUNCTION LPATRHS : EQUALS EXP\n               | EQUALS EXP WHERE DECLARATIONS\n               | GDRHS\n               | GDRHS WHERE DECLARATIONS\n        GDRHS : GIVEN EXP EQUALS EXP\n                 | GIVEN EXP EQUALS EXP GDRHS\n        EXP : INFIX_EXP\n        INFIX_EXP : LEXP OP INFIX_EXP\n                     | MINUS INFIX_EXP\n                     | LEXP\n        LEXP : LAMBDA APAT APATS ARROW EXP\n                | LET DECLARATIONS IN EXP\n                | EXP IF EXP ELSE EXP\n                | MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE\n                | FEXP\n        FEXP : FEXP AEXP\n                | AEXP\n        AEXP : USED_VAR\n                | USED_TYPENAME\n                | LITERAL\n                | OPERATOR_FUNC\n                | OPEN_PAREN EXP CLOSE_PAREN\n        OPERATOR_FUNC : OPEN_PAREN OP CLOSE_PARENALTS : ALT ENDSTATEMENT ALTS\n                | ALT\n        ALT : LPAT ARROW EXP\n               |\n        LPAT : APAT\n                | MINUS OPEN_PAREN INTEGER CLOSE_PAREN\n                | MINUS OPEN_PAREN FLOAT CLOSE_PAREN\n                | TYPENAME APAT APATS\n        APAT : PARAM\n                | TYPENAME\n                | LITERAL\n                | OPEN_PAREN LPAT CLOSE_PAREN\n        VAROP : VARSYM\n                 | INFIX_FUNCTION\n        INFIX_FUNCTION : BACKTICK IDENTIFIER BACKTICKOP : VAROP\n        APATS : APAT APATS\n                 |\n        VARSYM : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | MODULO\n                  | POW\n                  | EQUALITY\n                  | INEQUALITY\n                  | LESS\n                  | LEQ\n                  | GREATER\n                  | GEQ\n                  | AND\n                  | OR\n        LITERAL : FLOAT\n                   | INTEGER\n                   | BOOL\n                   | CHAR\n                   | STRING\n        USED_VAR : IDENTIFIERUSED_TYPENAME : TYPENAMEPARAM : IDENTIFIER'
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end':([1,5,36,93,],[0,-1,-3,-2,]),'IDENTIFIER':([2,6,11,12,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,44,45,47,49,57,58,63,66,71,72,74,75,76,77,78,79,80,81,82,83,87,88,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,134,141,146,147,150,152,153,156,157,159,160,161,162,173,174,175,176,],[3,12,38,39,39,-99,12,-98,-76,-100,-101,-102,12,12,-105,39,-74,-75,39,-13,39,82,82,39,90,39,96,82,39,82,82,-59,-60,-61,-62,-63,82,-103,-104,39,-77,-12,82,82,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,39,12,-58,82,82,39,-80,-35,82,-64,-65,161,82,82,12,39,-36,-34,-37,161,39,82,-38,161,]),'WHERE':([3,24,30,32,33,34,48,68,69,70,75,76,77,78,79,80,82,83,117,123,139,146,147,148,154,158,164,165,172,],[4,-99,-98,-100,-101,-102,84,97,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-51,-58,-50,-64,-65,-47,-54,-48,-55,-53,-56,]),'OPEN_BRACE':([4,73,84,97,145,],[6,121,121,121,157,]),'IMPORT':([6,35,],[11,11,]),'NEWTYPE':([6,35,37,],[15,15,15,]),'CLOSE_BRACE':([6,8,10,13,14,17,18,19,20,24,30,32,33,34,35,37,46,48,50,60,62,68,69,70,75,76,77,78,79,80,82,83,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,123,127,129,131,134,135,136,137,139,142,143,144,146,147,148,150,154,155,156,157,158,159,160,161,163,164,165,166,167,168,172,173,175,177,178,],[-27,36,-8,-9,-10,-21,-22,-23,-26,-99,-98,-100,-101,-102,-27,-27,-24,-45,-25,93,-7,-43,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-51,143,-58,-46,-28,-80,-35,-11,-15,-44,-50,155,-18,-20,-64,-65,-47,-16,-54,-17,-27,-69,-48,-36,-34,-37,-14,-55,-53,-19,172,-67,-56,-69,-38,-66,-68,]),'ENDSTATEMENT':([6,7,8,9,10,13,14,17,18,19,20,24,30,32,33,34,35,37,38,46,48,50,60,61,62,68,69,70,75,76,77,78,79,80,82,83,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,123,127,129,131,134,135,136,137,139,143,144,146,147,148,150,154,155,156,157,158,159,160,161,163,164,165,168,172,173,175,178,],[-27,35,37,-5,-8,-9,-10,-21,-22,-23,-26,-99,-98,-100,-101,-102,-27,-27,-6,-24,-45,-25,37,-4,-7,-43,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-51,-27,-58,-46,-28,-80,-35,-11,-15,-44,-50,-18,156,-64,-65,-47,-16,-54,-17,-27,-69,-48,-36,-34,-37,-14,-55,-53,173,-56,-69,-38,-68,]),'SETFIX':([6,35,37,121,156,],[23,23,23,23,23,]),'OPEN_PAREN':([6,12,16,24,26,29,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,57,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,134,141,146,147,150,152,153,156,157,159,160,161,162,173,174,175,176,],[26,43,43,-99,26,59,-98,-76,-100,-101,-102,26,26,-105,43,-74,-75,43,43,81,81,43,43,81,43,81,81,-59,-60,-61,-62,-63,81,-103,-104,43,-77,81,81,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,43,26,-58,81,81,43,-80,-35,81,-64,-65,162,81,81,26,43,-36,-34,-37,162,43,81,-38,162,]),'MINUS':([6,24,26,30,32,33,34,35,37,43,47,49,57,69,70,71,74,75,76,77,78,79,80,81,82,83,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,123,126,128,131,139,141,146,147,152,153,154,156,157,164,165,172,173,174,],[29,-99,29,-98,-100,-101,-102,29,29,29,71,71,29,-49,104,71,71,-57,-59,-60,-61,-62,-63,126,-103,-104,104,71,71,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-51,29,-58,71,71,-80,-50,71,-64,-65,71,71,-54,29,29,-55,-53,-56,29,71,]),'TYPENAME':([6,12,15,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,57,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,134,141,146,147,150,151,152,153,156,157,159,160,161,162,173,174,175,176,],[16,42,44,42,-99,16,-98,-76,-100,-101,-102,16,16,-105,42,-74,-75,16,42,83,83,16,42,83,42,83,83,-59,-60,-61,-62,-63,83,-103,-104,42,-77,134,83,83,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,42,16,-58,83,83,42,-80,-35,83,-64,-65,159,134,83,83,16,16,-36,-34,-37,159,16,83,-38,159,]),'FLOAT':([6,12,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,57,59,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,141,146,147,152,153,156,157,173,174,],[30,30,30,-99,30,-98,-76,-100,-101,-102,30,30,-105,30,-74,-75,30,30,30,30,30,92,30,30,30,30,30,-59,-60,-61,-62,-63,30,-103,-104,30,-77,30,30,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,30,30,-58,30,30,30,-80,30,-64,-65,30,30,30,30,30,30,]),'INTEGER':([6,12,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,51,52,53,54,57,59,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,141,146,147,152,153,156,157,173,174,],[24,24,24,-99,24,-98,-76,-100,-101,-102,24,24,-105,24,-74,-75,24,24,24,24,86,-29,-30,-31,24,91,24,24,24,24,24,-59,-60,-61,-62,-63,24,-103,-104,24,-77,24,24,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,24,24,-58,24,24,24,-80,24,-64,-65,24,24,24,24,24,24,]),'BOOL':([6,12,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,57,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,141,146,147,152,153,156,157,173,174,],[32,32,32,-99,32,-98,-76,-100,-101,-102,32,32,-105,32,-74,-75,32,32,32,32,32,32,32,32,32,32,-59,-60,-61,-62,-63,32,-103,-104,32,-77,32,32,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,32,32,-58,32,32,32,-80,32,-64,-65,32,32,32,32,32,32,]),'CHAR':([6,12,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,57,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,141,146,147,152,153,156,157,173,174,],[33,33,33,-99,33,-98,-76,-100,-101,-102,33,33,-105,33,-74,-75,33,33,33,33,33,33,33,33,33,33,-59,-60,-61,-62,-63,33,-103,-104,33,-77,33,33,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,33,33,-58,33,33,33,-80,33,-64,-65,33,33,33,33,33,33,]),'STRING':([6,12,16,24,26,30,31,32,33,34,35,37,39,40,41,42,43,45,47,49,57,63,71,72,74,75,76,77,78,79,80,81,82,83,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,123,126,128,130,131,141,146,147,152,153,156,157,173,174,],[34,34,34,-99,34,-98,-76,-100,-101,-102,34,34,-105,34,-74,-75,34,34,34,34,34,34,34,34,34,34,-59,-60,-61,-62,-63,34,-103,-104,34,-77,34,34,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,34,34,-58,34,34,34,-80,34,-64,-65,34,34,34,34,34,34,]),'EQUALS':([12,16,21,22,24,25,27,30,31,32,33,34,39,40,41,42,44,45,63,64,66,67,69,70,75,76,77,78,79,80,82,83,85,88,89,94,96,117,123,130,132,133,139,146,147,149,154,164,165,172,],[-105,-75,47,47,-99,-70,-41,-98,-76,-100,-101,-102,-105,-83,-74,-75,-13,-83,-83,-39,95,-73,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,128,-77,-42,-82,-12,-51,-58,-83,-71,-72,-50,-64,-65,-40,-54,-55,-53,-56,]),'GIVEN':([12,16,21,22,24,25,27,30,31,32,33,34,39,40,41,42,45,63,64,67,69,70,75,76,77,78,79,80,82,83,88,89,94,117,123,130,132,133,139,146,147,148,149,154,164,165,172,],[-105,-75,49,49,-99,-70,-41,-98,-76,-100,-101,-102,-105,-83,-74,-75,-83,-83,-39,-73,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-77,-42,-82,-51,-58,-83,-71,-72,-50,-64,-65,49,-40,-54,-55,-53,-56,]),'BACKTICK':([12,16,22,24,25,28,30,31,32,33,34,39,41,42,45,56,63,67,69,70,75,76,77,78,79,80,81,82,83,86,88,90,94,117,123,132,133,139,146,147,154,164,165,172,],[-105,-75,-74,-99,-70,58,-98,-76,-100,-101,-102,-105,-74,-75,-83,58,-83,-73,-49,58,-57,-59,-60,-61,-62,-63,58,-103,-104,58,-77,131,-82,-51,-58,-71,-72,-50,-64,-65,-54,-55,-53,-56,]),'CLOSE_PAREN':([12,16,24,25,27,30,31,32,33,34,39,40,41,42,45,55,56,63,64,65,67,69,70,75,76,77,78,79,80,82,83,88,89,91,92,94,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,123,124,125,126,130,131,132,133,139,146,147,149,154,159,161,164,165,170,171,172,175,179,],[-105,-75,-99,-70,-41,-98,-76,-100,-101,-102,-105,-83,-74,-75,-83,87,88,-83,-39,88,-73,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-77,-42,132,133,-82,-81,-78,-79,-84,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-51,-58,146,147,-85,-83,-80,-71,-72,-50,-64,-65,-40,-54,-36,-37,-55,-53,175,-32,-56,-38,-33,]),'ARROW':([16,24,25,30,31,32,33,34,39,41,42,45,63,67,88,94,119,132,133,140,159,161,169,171,175,],[-75,-99,-70,-98,-76,-100,-101,-102,-105,-74,-75,-83,-83,-73,-77,-82,-83,-71,-72,153,-36,-37,174,176,-38,]),'LEFTASSOC':([23,],[52,]),'RIGHTASSOC':([23,],[53,]),'NONASSOC':([23,],[54,]),'PLUS':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,103,-57,-59,-60,-61,-62,-63,103,-103,-104,103,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'TIMES':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,105,-57,-59,-60,-61,-62,-63,105,-103,-104,105,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'DIVIDE':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,106,-57,-59,-60,-61,-62,-63,106,-103,-104,106,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'MODULO':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,107,-57,-59,-60,-61,-62,-63,107,-103,-104,107,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'POW':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,108,-57,-59,-60,-61,-62,-63,108,-103,-104,108,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'EQUALITY':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,109,-57,-59,-60,-61,-62,-63,109,-103,-104,109,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'INEQUALITY':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,110,-57,-59,-60,-61,-62,-63,110,-103,-104,110,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'LESS':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,111,-57,-59,-60,-61,-62,-63,111,-103,-104,111,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'LEQ':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,112,-57,-59,-60,-61,-62,-63,112,-103,-104,112,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'GREATER':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,113,-57,-59,-60,-61,-62,-63,113,-103,-104,113,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'GEQ':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,114,-57,-59,-60,-61,-62,-63,114,-103,-104,114,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'AND':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,115,-57,-59,-60,-61,-62,-63,115,-103,-104,115,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'OR':([24,30,32,33,34,69,70,75,76,77,78,79,80,81,82,83,86,117,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,116,-57,-59,-60,-61,-62,-63,116,-103,-104,116,-51,-58,-50,-64,-65,-54,-55,-53,-56,]),'IF':([24,30,32,33,34,68,69,70,75,76,77,78,79,80,82,83,85,117,118,122,123,124,138,139,146,147,148,154,164,165,172,178,],[-99,-98,-100,-101,-102,98,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,98,-49,98,98,-58,98,98,-49,-64,-65,98,98,98,98,-56,98,]),'OF':([24,30,32,33,34,69,70,75,76,77,78,79,80,82,83,117,122,123,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-51,145,-58,-50,-64,-65,-54,-55,-53,-56,]),'ELSE':([24,30,32,33,34,69,70,75,76,77,78,79,80,82,83,117,123,138,139,146,147,154,164,165,172,],[-99,-98,-100,-101,-102,-49,-52,-57,-59,-60,-61,-62,-63,-103,-104,-51,-58,152,-50,-64,-65,-54,-55,-53,-56,]),'LAMBDA':([47,49,71,74,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,126,128,131,141,152,153,174,],[72,72,72,72,72,72,72,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,72,72,-80,72,72,72,72,]),'LET':([47,49,71,74,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,126,128,131,141,152,153,174,],[73,73,73,73,73,73,73,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,73,73,-80,73,73,73,73,]),'MATCH':([47,49,71,74,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,126,128,131,141,152,153,174,],[74,74,74,74,74,74,74,-81,-78,-79,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,74,74,-80,74,74,74,74,]),'IN':([120,143,155,],[141,-18,-17,]),'PIPE':([134,135,136,150,159,160,161,163,175,],[-35,151,-15,-16,-36,-34,-37,-14,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MODULE_DEFINITION':([0,],[1,]),'BODY':([4,],[5,]),'IMPORT_DECLARATIONS':([6,],[7,]),'TOP_DECLARATIONS':([6,35,],[8,60,]),'IMPORT_DECLARATION':([6,35,],[9,61,]),'TOP_DECLARATION':([6,35,37,],[10,10,62,]),'TYPE_DECLARATION':([6,35,37,],[13,13,13,]),'DECLARATION':([6,35,37,121,156,],[14,14,14,144,144,]),'GEN_DECLARATION':([6,35,37,121,156,],[17,17,17,17,17,]),'FUNCTION_DEFINITION':([6,35,37,121,156,],[18,18,18,18,18,]),'VARIABLE_DEFINITION':([6,35,37,121,156,],[19,19,19,19,19,]),'FIXITY_DECLARATION':([6,35,37,121,156,],[20,20,20,20,20,]),'FUNCTION_LHS':([6,26,35,37,121,156,],[21,55,21,21,21,21,]),'PARAM':([6,12,16,26,35,37,40,43,45,57,63,72,87,119,121,130,156,157,173,],[22,41,41,41,22,22,41,41,41,41,41,41,41,41,22,41,22,41,41,]),'APAT':([6,12,16,26,35,37,40,43,45,57,63,72,87,119,121,130,156,157,173,],[25,40,45,25,25,25,63,25,63,25,63,119,130,63,25,63,25,25,25,]),'INFIX_FUNCTION_DEFINITION':([6,26,35,37,121,156,],[27,27,27,27,27,27,]),'LPAT':([6,26,35,37,43,57,121,156,157,173,],[28,56,28,28,65,89,28,28,169,169,]),'LITERAL':([6,12,16,26,35,37,40,43,45,47,49,57,63,71,72,74,75,81,87,98,99,119,121,126,128,130,141,152,153,156,157,173,174,],[31,31,31,31,31,31,31,31,31,79,79,31,31,79,31,79,79,79,31,79,79,31,31,79,79,31,79,79,79,31,31,31,79,]),'RHS':([21,22,],[46,50,]),'GDRHS':([21,22,148,],[48,48,158,]),'ASSOCIATIVITY':([23,],[51,]),'INFIX_FUNCTION':([28,56,70,81,86,],[57,57,102,102,102,]),'APATS':([40,45,63,119,130,],[64,67,94,140,149,]),'TYVARS':([44,],[66,]),'EXP':([47,49,71,74,81,98,99,126,128,141,152,153,174,],[68,85,118,122,124,138,118,118,148,154,164,165,178,]),'INFIX_EXP':([47,49,71,74,81,98,99,126,128,141,152,153,174,],[69,69,117,69,69,69,139,117,69,69,69,69,69,]),'LEXP':([47,49,71,74,81,98,99,126,128,141,152,153,174,],[70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FEXP':([47,49,71,74,81,98,99,126,128,141,152,153,174,],[75,75,75,75,75,75,75,75,75,75,75,75,75,]),'AEXP':([47,49,71,74,75,81,98,99,126,128,141,152,153,174,],[76,76,76,76,123,76,76,76,76,76,76,76,76,76,]),'USED_VAR':([47,49,71,74,75,81,98,99,126,128,141,152,153,174,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'USED_TYPENAME':([47,49,71,74,75,81,98,99,126,128,141,152,153,174,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'OPERATOR_FUNC':([47,49,71,74,75,81,98,99,126,128,141,152,153,174,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'OP':([70,81,86,],[99,125,129,]),'VAROP':([70,81,86,],[100,100,100,]),'VARSYM':([70,81,86,],[101,101,101,]),'DECLARATIONS':([73,84,97,],[120,127,137,]),'CONSTRUCTORS':([95,],[135,]),'CONSTRUCTOR':([95,151,],[136,163,]),'DECLARATIONS_LIST':([121,156,],[142,166,]),'ATYPES':([134,],[150,]),'ATYPE':([150,162,176,],[160,171,171,]),'ALTS':([157,173,],[167,177,]),'ALT':([157,173,],[168,168,]),'TYPE':([162,176,],[170,179,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MODULE_DEFINITION","S'",1,None,None,None),
  ('MODULE_DEFINITION -> MODULE IDENTIFIER WHERE BODY','MODULE_DEFINITION',4,'p_MODULE_DEFINITION','funky_parser.py',19),
  ('BODY -> OPEN_BRACE IMPORT_DECLARATIONS ENDSTATEMENT TOP_DECLARATIONS CLOSE_BRACE','BODY',5,'p_BODY','funky_parser.py',25),
  ('BODY -> OPEN_BRACE TOP_DECLARATIONS CLOSE_BRACE','BODY',3,'p_BODY','funky_parser.py',26),
  ('IMPORT_DECLARATIONS -> IMPORT_DECLARATIONS ENDSTATEMENT IMPORT_DECLARATION','IMPORT_DECLARATIONS',3,'p_IMPORT_DECLARATIONS','funky_parser.py',38),
  ('IMPORT_DECLARATIONS -> IMPORT_DECLARATION','IMPORT_DECLARATIONS',1,'p_IMPORT_DECLARATIONS','funky_parser.py',39),
  ('IMPORT_DECLARATION -> IMPORT IDENTIFIER','IMPORT_DECLARATION',2,'p_IMPORT_DECLARATION','funky_parser.py',47),
  ('TOP_DECLARATIONS -> TOP_DECLARATIONS ENDSTATEMENT TOP_DECLARATION','TOP_DECLARATIONS',3,'p_TOP_DECLARATIONS','funky_parser.py',52),
  ('TOP_DECLARATIONS -> TOP_DECLARATION','TOP_DECLARATIONS',1,'p_TOP_DECLARATIONS','funky_parser.py',53),
  ('TOP_DECLARATION -> TYPE_DECLARATION','TOP_DECLARATION',1,'p_TOP_DECLARATION','funky_parser.py',61),
  ('TOP_DECLARATION -> DECLARATION','TOP_DECLARATION',1,'p_TOP_DECLARATION','funky_parser.py',62),
  ('TYPE_DECLARATION -> NEWTYPE TYPENAME TYVARS EQUALS CONSTRUCTORS','TYPE_DECLARATION',5,'p_TYPE_DECLARATION','funky_parser.py',67),
  ('TYVARS -> TYVARS IDENTIFIER','TYVARS',2,'p_TYVARS','funky_parser.py',71),
  ('TYVARS -> <empty>','TYVARS',0,'p_TYVARS','funky_parser.py',72),
  ('CONSTRUCTORS -> CONSTRUCTORS PIPE CONSTRUCTOR','CONSTRUCTORS',3,'p_CONSTRUCTORS','funky_parser.py',80),
  ('CONSTRUCTORS -> CONSTRUCTOR','CONSTRUCTORS',1,'p_CONSTRUCTORS','funky_parser.py',81),
  ('CONSTRUCTOR -> TYPENAME ATYPES','CONSTRUCTOR',2,'p_CONSTRUCTOR','funky_parser.py',89),
  ('DECLARATIONS -> OPEN_BRACE DECLARATIONS_LIST CLOSE_BRACE','DECLARATIONS',3,'p_DECLARATIONS','funky_parser.py',93),
  ('DECLARATIONS -> OPEN_BRACE CLOSE_BRACE','DECLARATIONS',2,'p_DECLARATIONS','funky_parser.py',94),
  ('DECLARATIONS_LIST -> DECLARATION ENDSTATEMENT DECLARATIONS_LIST','DECLARATIONS_LIST',3,'p_DECLARATIONS_LIST','funky_parser.py',102),
  ('DECLARATIONS_LIST -> DECLARATION','DECLARATIONS_LIST',1,'p_DECLARATIONS_LIST','funky_parser.py',103),
  ('DECLARATION -> GEN_DECLARATION','DECLARATION',1,'p_DECLARATION','funky_parser.py',111),
  ('DECLARATION -> FUNCTION_DEFINITION','DECLARATION',1,'p_DECLARATION','funky_parser.py',112),
  ('DECLARATION -> VARIABLE_DEFINITION','DECLARATION',1,'p_DECLARATION','funky_parser.py',113),
  ('FUNCTION_DEFINITION -> FUNCTION_LHS RHS','FUNCTION_DEFINITION',2,'p_FUNCTION_DEFINITION','funky_parser.py',118),
  ('VARIABLE_DEFINITION -> PARAM RHS','VARIABLE_DEFINITION',2,'p_VARIABLE_DEFINITION','funky_parser.py',122),
  ('GEN_DECLARATION -> FIXITY_DECLARATION','GEN_DECLARATION',1,'p_GEN_DECLARATION','funky_parser.py',126),
  ('GEN_DECLARATION -> <empty>','GEN_DECLARATION',0,'p_GEN_DECLARATION','funky_parser.py',127),
  ('FIXITY_DECLARATION -> SETFIX ASSOCIATIVITY INTEGER OP','FIXITY_DECLARATION',4,'p_FIXITY_DECLARATION','funky_parser.py',132),
  ('ASSOCIATIVITY -> LEFTASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',136),
  ('ASSOCIATIVITY -> RIGHTASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',137),
  ('ASSOCIATIVITY -> NONASSOC','ASSOCIATIVITY',1,'p_ASSOCIATIVITY','funky_parser.py',138),
  ('TYPE -> ATYPE','TYPE',1,'p_TYPE','funky_parser.py',143),
  ('TYPE -> ATYPE ARROW TYPE','TYPE',3,'p_TYPE','funky_parser.py',144),
  ('ATYPES -> ATYPES ATYPE','ATYPES',2,'p_ATYPES','funky_parser.py',152),
  ('ATYPES -> <empty>','ATYPES',0,'p_ATYPES','funky_parser.py',153),
  ('ATYPE -> TYPENAME','ATYPE',1,'p_ATYPE','funky_parser.py',161),
  ('ATYPE -> IDENTIFIER','ATYPE',1,'p_ATYPE','funky_parser.py',162),
  ('ATYPE -> OPEN_PAREN TYPE CLOSE_PAREN','ATYPE',3,'p_ATYPE','funky_parser.py',163),
  ('FUNCTION_LHS -> IDENTIFIER APAT APATS','FUNCTION_LHS',3,'p_FUNCTION_LHS','funky_parser.py',171),
  ('FUNCTION_LHS -> OPEN_PAREN FUNCTION_LHS CLOSE_PAREN APAT APATS','FUNCTION_LHS',5,'p_FUNCTION_LHS','funky_parser.py',172),
  ('FUNCTION_LHS -> INFIX_FUNCTION_DEFINITION','FUNCTION_LHS',1,'p_FUNCTION_LHS','funky_parser.py',173),
  ('INFIX_FUNCTION_DEFINITION -> LPAT INFIX_FUNCTION LPAT','INFIX_FUNCTION_DEFINITION',3,'p_INFIX_FUNCTION_DEFINITION','funky_parser.py',185),
  ('RHS -> EQUALS EXP','RHS',2,'p_RHS','funky_parser.py',189),
  ('RHS -> EQUALS EXP WHERE DECLARATIONS','RHS',4,'p_RHS','funky_parser.py',190),
  ('RHS -> GDRHS','RHS',1,'p_RHS','funky_parser.py',191),
  ('RHS -> GDRHS WHERE DECLARATIONS','RHS',3,'p_RHS','funky_parser.py',192),
  ('GDRHS -> GIVEN EXP EQUALS EXP','GDRHS',4,'p_GDRHS','funky_parser.py',205),
  ('GDRHS -> GIVEN EXP EQUALS EXP GDRHS','GDRHS',5,'p_GDRHS','funky_parser.py',206),
  ('EXP -> INFIX_EXP','EXP',1,'p_EXP','funky_parser.py',214),
  ('INFIX_EXP -> LEXP OP INFIX_EXP','INFIX_EXP',3,'p_INFIX_EXP','funky_parser.py',220),
  ('INFIX_EXP -> MINUS INFIX_EXP','INFIX_EXP',2,'p_INFIX_EXP','funky_parser.py',221),
  ('INFIX_EXP -> LEXP','INFIX_EXP',1,'p_INFIX_EXP','funky_parser.py',222),
  ('LEXP -> LAMBDA APAT APATS ARROW EXP','LEXP',5,'p_LEXP','funky_parser.py',240),
  ('LEXP -> LET DECLARATIONS IN EXP','LEXP',4,'p_LEXP','funky_parser.py',241),
  ('LEXP -> EXP IF EXP ELSE EXP','LEXP',5,'p_LEXP','funky_parser.py',242),
  ('LEXP -> MATCH EXP OF OPEN_BRACE ALTS CLOSE_BRACE','LEXP',6,'p_LEXP','funky_parser.py',243),
  ('LEXP -> FEXP','LEXP',1,'p_LEXP','funky_parser.py',244),
  ('FEXP -> FEXP AEXP','FEXP',2,'p_FEXP','funky_parser.py',260),
  ('FEXP -> AEXP','FEXP',1,'p_FEXP','funky_parser.py',261),
  ('AEXP -> USED_VAR','AEXP',1,'p_AEXP','funky_parser.py',269),
  ('AEXP -> USED_TYPENAME','AEXP',1,'p_AEXP','funky_parser.py',270),
  ('AEXP -> LITERAL','AEXP',1,'p_AEXP','funky_parser.py',271),
  ('AEXP -> OPERATOR_FUNC','AEXP',1,'p_AEXP','funky_parser.py',272),
  ('AEXP -> OPEN_PAREN EXP CLOSE_PAREN','AEXP',3,'p_AEXP','funky_parser.py',273),
  ('OPERATOR_FUNC -> OPEN_PAREN OP CLOSE_PAREN','OPERATOR_FUNC',3,'p_OPERATOR_FUNC','funky_parser.py',281),
  ('ALTS -> ALT ENDSTATEMENT ALTS','ALTS',3,'p_ALTS','funky_parser.py',285),
  ('ALTS -> ALT','ALTS',1,'p_ALTS','funky_parser.py',286),
  ('ALT -> LPAT ARROW EXP','ALT',3,'p_ALT','funky_parser.py',294),
  ('ALT -> <empty>','ALT',0,'p_ALT','funky_parser.py',295),
  ('LPAT -> APAT','LPAT',1,'p_LPAT','funky_parser.py',300),
  ('LPAT -> MINUS OPEN_PAREN INTEGER CLOSE_PAREN','LPAT',4,'p_LPAT','funky_parser.py',301),
  ('LPAT -> MINUS OPEN_PAREN FLOAT CLOSE_PAREN','LPAT',4,'p_LPAT','funky_parser.py',302),
  ('LPAT -> TYPENAME APAT APATS','LPAT',3,'p_LPAT','funky_parser.py',303),
  ('APAT -> PARAM','APAT',1,'p_APAT','funky_parser.py',313),
  ('APAT -> TYPENAME','APAT',1,'p_APAT','funky_parser.py',314),
  ('APAT -> LITERAL','APAT',1,'p_APAT','funky_parser.py',315),
  ('APAT -> OPEN_PAREN LPAT CLOSE_PAREN','APAT',3,'p_APAT','funky_parser.py',316),
  ('VAROP -> VARSYM','VAROP',1,'p_VAROP','funky_parser.py',327),
  ('VAROP -> INFIX_FUNCTION','VAROP',1,'p_VAROP','funky_parser.py',328),
  ('INFIX_FUNCTION -> BACKTICK IDENTIFIER BACKTICK','INFIX_FUNCTION',3,'p_INFIX_FUNCTION','funky_parser.py',333),
  ('OP -> VAROP','OP',1,'p_OP','funky_parser.py',339),
  ('APATS -> APAT APATS','APATS',2,'p_APATS','funky_parser.py',344),
  ('APATS -> <empty>','APATS',0,'p_APATS','funky_parser.py',345),
  ('VARSYM -> PLUS','VARSYM',1,'p_VARSYM','funky_parser.py',353),
  ('VARSYM -> MINUS','VARSYM',1,'p_VARSYM','funky_parser.py',354),
  ('VARSYM -> TIMES','VARSYM',1,'p_VARSYM','funky_parser.py',355),
  ('VARSYM -> DIVIDE','VARSYM',1,'p_VARSYM','funky_parser.py',356),
  ('VARSYM -> MODULO','VARSYM',1,'p_VARSYM','funky_parser.py',357),
  ('VARSYM -> POW','VARSYM',1,'p_VARSYM','funky_parser.py',358),
  ('VARSYM -> EQUALITY','VARSYM',1,'p_VARSYM','funky_parser.py',359),
  ('VARSYM -> INEQUALITY','VARSYM',1,'p_VARSYM','funky_parser.py',360),
  ('VARSYM -> LESS','VARSYM',1,'p_VARSYM','funky_parser.py',361),
  ('VARSYM -> LEQ','VARSYM',1,'p_VARSYM','funky_parser.py',362),
  ('VARSYM -> GREATER','VARSYM',1,'p_VARSYM','funky_parser.py',363),
  ('VARSYM -> GEQ','VARSYM',1,'p_VARSYM','funky_parser.py',364),
  ('VARSYM -> AND','VARSYM',1,'p_VARSYM','funky_parser.py',365),
  ('VARSYM -> OR','VARSYM',1,'p_VARSYM','funky_parser.py',366),
  ('LITERAL -> FLOAT','LITERAL',1,'p_LITERAL','funky_parser.py',371),
  ('LITERAL -> INTEGER','LITERAL',1,'p_LITERAL','funky_parser.py',372),
  ('LITERAL -> BOOL','LITERAL',1,'p_LITERAL','funky_parser.py',373),
  ('LITERAL -> CHAR','LITERAL',1,'p_LITERAL','funky_parser.py',374),
  ('LITERAL -> STRING','LITERAL',1,'p_LITERAL','funky_parser.py',375),
  ('USED_VAR -> IDENTIFIER','USED_VAR',1,'p_USED_VAR','funky_parser.py',380),
  ('USED_TYPENAME -> TYPENAME','USED_TYPENAME',1,'p_USED_TYPENAME','funky_parser.py',384),
  ('PARAM -> IDENTIFIER','PARAM',1,'p_PARAM','funky_parser.py',388),
]
